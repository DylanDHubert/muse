/**
 * #app.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { AdsConfig } from "../../ads/v1/ads.js";
import { Scope } from "../../app_permission/v1/app_permission.js";
export declare enum AppVisibility {
    PUBLIC = 0,
    PRIVATE = 1,
    UNLISTED = 2,
    UNRECOGNIZED = -1
}
export declare function appVisibilityFromJSON(object: any): AppVisibility;
export declare function appVisibilityToJSON(object: AppVisibility): number;
export interface App {
    /** App unique identifier, eg '04adab23-60c0-467d-9958-948cea1ff6be' */
    id: string;
    /** App slug, eg 'my-devvit-app' */
    slug: string;
    /** App name, eg 'My Devvit App' */
    name: string;
    /** The visibility of the app (PUBLIC, PRIVATE, or UNLISTED) */
    visibility: AppVisibility;
    /** Information about the app owner */
    owner?: AppOwner | undefined;
    /** The app version, eg '1.2.3' */
    version: string;
    /** Configuration related to ads */
    adsConfig?: AdsConfig | undefined;
    /** URL to the app's terms and conditions */
    termsAndConditions: string;
    /** URL to the app's privacy policy */
    privacyPolicy: string;
    /** The permission scopes requested by the app version */
    requestedPermissionScopes: Scope[];
}
export interface AppOwner {
    /** t2_ userId of the app owner, eg 't2_11t51216bu' */
    userId: string;
    /** Username of the app owner, eg 'slowcooked99' */
    userName: string;
}
/** Loosely models a subset of the fields found in devvit.json. */
export interface AppConfig {
    /** Map of the app's Post entrypoints mapping entryname to entrypointUrl. Example: "leaderboard" maps to "https://{{slug}}-{{location}}-{{version}}-webview.devvit.net/leaderboard.html"> */
    entrypoints: {
        [key: string]: string;
    };
}
export interface AppConfig_EntrypointsEntry {
    key: string;
    value: string;
}
export declare const App: {
    $type: "reddit.devvit.common.v1.App";
    encode(message: App, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): App;
    fromJSON(object: any): App;
    toJSON(message: App): unknown;
    create(base?: DeepPartial<App>): App;
    fromPartial(object: DeepPartial<App>): App;
};
export declare const AppOwner: {
    $type: "reddit.devvit.common.v1.AppOwner";
    encode(message: AppOwner, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppOwner;
    fromJSON(object: any): AppOwner;
    toJSON(message: AppOwner): unknown;
    create(base?: DeepPartial<AppOwner>): AppOwner;
    fromPartial(object: DeepPartial<AppOwner>): AppOwner;
};
export declare const AppConfig: {
    $type: "reddit.devvit.common.v1.AppConfig";
    encode(message: AppConfig, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppConfig;
    fromJSON(object: any): AppConfig;
    toJSON(message: AppConfig): unknown;
    create(base?: DeepPartial<AppConfig>): AppConfig;
    fromPartial(object: DeepPartial<AppConfig>): AppConfig;
};
export declare const AppConfig_EntrypointsEntry: {
    $type: "reddit.devvit.common.v1.AppConfig.EntrypointsEntry";
    encode(message: AppConfig_EntrypointsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppConfig_EntrypointsEntry;
    fromJSON(object: any): AppConfig_EntrypointsEntry;
    toJSON(message: AppConfig_EntrypointsEntry): unknown;
    create(base?: DeepPartial<AppConfig_EntrypointsEntry>): AppConfig_EntrypointsEntry;
    fromPartial(object: DeepPartial<AppConfig_EntrypointsEntry>): AppConfig_EntrypointsEntry;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=app.d.ts.map