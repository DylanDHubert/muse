/**
 * #installation.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from "protobufjs/minimal.js";
import { FullInstallationInfo, GetByAppNameAndInstallLocationRequest, InstallationCreationRequest, } from "../../../../../devvit/dev_portal/installation/installation.js";
export const InstallationServiceServiceName = "devvit.dev_portal.v1.InstallationService";
export class InstallationServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || InstallationServiceServiceName;
        this.rpc = rpc;
        this.Create = this.Create.bind(this);
        this.GetByAppNameAndInstallLocation = this.GetByAppNameAndInstallLocation.bind(this);
    }
    Create(request, metadata) {
        const data = InstallationCreationRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Create", data, metadata);
        return promise.then((data) => FullInstallationInfo.decode(_m0.Reader.create(data)));
    }
    GetByAppNameAndInstallLocation(request, metadata) {
        const data = GetByAppNameAndInstallLocationRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetByAppNameAndInstallLocation", data, metadata);
        return promise.then((data) => FullInstallationInfo.decode(_m0.Reader.create(data)));
    }
}
export const InstallationServiceDefinition = {
    name: "InstallationService",
    fullName: "devvit.dev_portal.v1.InstallationService",
    methods: {
        create: {
            name: "Create",
            requestType: InstallationCreationRequest,
            requestStream: false,
            responseType: FullInstallationInfo,
            responseStream: false,
            options: {},
        },
        getByAppNameAndInstallLocation: {
            name: "GetByAppNameAndInstallLocation",
            requestType: GetByAppNameAndInstallLocationRequest,
            requestStream: false,
            responseType: FullInstallationInfo,
            responseStream: false,
            options: {},
        },
    },
};
