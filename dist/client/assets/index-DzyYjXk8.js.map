{"version":3,"file":"index-DzyYjXk8.js","sources":["../../../src/client/game/scenes/Boot.ts","../../../src/client/game/scenes/GameOver.ts","../../../src/client/game/scenes/MuseRunnerGame.ts","../../../src/client/game/scenes/MainMenu.ts","../../../src/client/game/scenes/Preloader.ts","../../../src/client/game/main.ts","../../../src/client/main.ts"],"sourcesContent":["import { Scene } from 'phaser';\n\nexport class Boot extends Scene {\n  constructor() {\n    super('Boot');\n  }\n\n  preload() {\n    //  The Boot Scene is typically used to load in any assets you require for your Preloader, such as a game logo or background.\n    //  The smaller the file size of the assets, the better, as the Boot Scene itself has no preloader.\n\n    this.load.image('background', 'assets/bg.png');\n  }\n\n  create() {\n    this.scene.start('Preloader');\n  }\n}\n","import { Scene } from 'phaser';\nimport * as Phaser from 'phaser';\n\nexport class GameOver extends Scene {\n  camera: Phaser.Cameras.Scene2D.Camera;\n  background: Phaser.GameObjects.Image;\n  gameover_text: Phaser.GameObjects.Text;\n\n  constructor() {\n    super('GameOver');\n  }\n\n  create() {\n    // Configure camera\n    this.camera = this.cameras.main;\n    this.camera.setBackgroundColor(0xff0000);\n\n    // Background – create once, full-screen\n    this.background = this.add.image(0, 0, 'background').setOrigin(0).setAlpha(0.5);\n\n    // \"Game Over\" text – created once and scaled responsively\n    this.gameover_text = this.add\n      .text(0, 0, 'Game Over', {\n        fontFamily: 'Arial Black',\n        fontSize: '64px',\n        color: '#ffffff',\n        stroke: '#000000',\n        strokeThickness: 8,\n        align: 'center',\n      })\n      .setOrigin(0.5);\n\n    // Initial responsive layout\n    this.updateLayout(this.scale.width, this.scale.height);\n\n    // Update layout on canvas resize / orientation change\n    this.scale.on('resize', (gameSize: Phaser.Structs.Size) => {\n      const { width, height } = gameSize;\n      this.updateLayout(width, height);\n    });\n\n    // Return to Main Menu on tap / click\n    this.input.once('pointerdown', () => {\n      this.scene.start('MainMenu');\n    });\n  }\n\n  private updateLayout(width: number, height: number): void {\n    // Resize camera viewport to prevent black bars\n    this.cameras.resize(width, height);\n\n    // Stretch background to fill entire screen\n    if (this.background) {\n      this.background.setDisplaySize(width, height);\n    }\n\n    // Compute scale factor (never enlarge above 1×)\n    const scaleFactor = Math.min(Math.min(width / 1024, height / 768), 1);\n\n    // Centre and scale the game-over text\n    if (this.gameover_text) {\n      this.gameover_text.setPosition(width / 2, height / 2);\n      this.gameover_text.setScale(scaleFactor);\n    }\n  }\n}\n","import { Scene } from 'phaser';\n\nexport class MuseRunnerGame extends Scene {\n    private character!: Phaser.GameObjects.Rectangle;\n    private platforms!: Phaser.GameObjects.Group;\n    private gameKeys!: { [key: string]: Phaser.Input.Keyboard.Key };\n    \n    // Game state\n    private isGameRunning: boolean = false;\n    private score: number = 0;\n    private streak: number = 0;\n    private characterSpeed: number = 120;\n    private scoreText!: Phaser.GameObjects.Text;\n    private streakText!: Phaser.GameObjects.Text;\n\n    // Musical note frequencies (C major scale)\n    private noteFrequencies = {\n        'S': 261.63, // C4\n        'D': 293.66, // D4\n        'F': 329.63, // E4\n        'G': 349.23, // F4\n        'H': 392.00, // G4\n        'J': 440.00, // A4\n        'K': 493.88  // B4\n    };\n\n    constructor() {\n        super('MuseRunnerGame');\n    }\n\n    create(): void {\n        const { width, height } = this.cameras.main;\n\n        // Create character (blue rectangle)\n        this.character = this.add.rectangle(100, height - 100, 30, 40, 0x3498db);\n        this.physics.add.existing(this.character);\n        const characterBody = this.character.body as Phaser.Physics.Arcade.Body;\n        characterBody.setCollideWorldBounds(true);\n        characterBody.setBounce(0.1);\n\n        // Create platforms group\n        this.platforms = this.add.group();\n\n        // Create initial platform\n        const initialPlatform = this.add.rectangle(50, height - 50, 200, 20, 0x2ecc71);\n        this.physics.add.existing(initialPlatform, true);\n        this.platforms.add(initialPlatform);\n\n        // Set up collisions\n        this.physics.add.collider(this.character, this.platforms);\n\n        // Musical keys setup (S-D-F-G-H-J-K)\n        this.gameKeys = {\n            'S': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.S),\n            'D': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.D),\n            'F': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.F),\n            'G': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.G),\n            'H': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.H),\n            'J': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.J),\n            'K': this.input.keyboard!.addKey(Phaser.Input.Keyboard.KeyCodes.K)\n        };\n\n        // Create UI\n        this.scoreText = this.add.text(16, 16, 'Score: 0', {\n            fontSize: '24px',\n            color: '#ffffff'\n        });\n\n        this.streakText = this.add.text(16, 50, 'Streak: 0', {\n            fontSize: '18px',\n            color: '#f39c12'\n        });\n\n        // Instructions\n        const instructionText = this.add.text(width / 2, 30, '🎵 Press S-D-F-G-H-J-K to create platforms! 🎵', {\n            fontSize: '18px',\n            color: '#ecf0f1',\n            fontFamily: 'Arial, sans-serif'\n        }).setOrigin(0.5);\n\n        // Make instructions pulse to draw attention\n        this.tweens.add({\n            targets: instructionText,\n            alpha: 0.6,\n            duration: 1500,\n            yoyo: true,\n            repeat: -1\n        });\n\n        // Controls info\n        this.add.text(width - 16, 16, 'ESC: Menu | R: Restart', {\n            fontSize: '14px',\n            color: '#95a5a6'\n        }).setOrigin(1, 0);\n\n        // ESC key to return to menu\n        this.input.keyboard!.on('keydown-ESC', () => {\n            this.scene.start('MainMenu');\n        });\n\n        // R key to restart\n        this.input.keyboard!.on('keydown-R', () => {\n            this.scene.restart();\n        });\n\n        // Start the game\n        this.isGameRunning = true;\n        \n        // Camera follows character\n        this.cameras.main.startFollow(this.character, true, 0.1, 0.1);\n        this.cameras.main.setDeadzone(200, 100);\n\n        // Reset game state\n        this.score = 0;\n        this.streak = 0;\n        this.characterSpeed = 120;\n    }\n\n    update(): void {\n        if (!this.isGameRunning) return;\n\n        // Auto-run character forward\n        const characterBody = this.character.body as Phaser.Physics.Arcade.Body;\n        characterBody.setVelocityX(this.characterSpeed);\n\n        // Check for musical key presses\n        Object.keys(this.gameKeys).forEach(key => {\n            if (Phaser.Input.Keyboard.JustDown(this.gameKeys[key])) {\n                this.playNote(key);\n                this.createPlatform();\n                this.updateScore(10);\n            }\n        });\n\n        // Increase difficulty over time\n        this.characterSpeed = Math.min(200, 120 + (this.score / 100));\n\n        // Game over condition\n        if (this.character.y > this.cameras.main.height + 100) {\n            this.gameOver();\n        }\n\n        // Clean up old platforms\n        this.platforms.children.entries.forEach((platform: any) => {\n            if (platform.x < this.character.x - 400) {\n                platform.destroy();\n            }\n        });\n    }\n\n    private playNote(key: string): void {\n        console.log(`Playing note ${key} at ${this.noteFrequencies[key]}Hz`);\n        \n        // Visual feedback for key press\n        this.character.setTint(0xf39c12);\n        this.time.delayedCall(150, () => {\n            this.character.clearTint();\n        });\n\n        // Create note indicator\n        const noteText = this.add.text(this.character.x, this.character.y - 60, key, {\n            fontSize: '28px',\n            color: '#f39c12',\n            fontFamily: 'Arial, sans-serif'\n        }).setOrigin(0.5);\n\n        // Animate note indicator\n        this.tweens.add({\n            targets: noteText,\n            y: noteText.y - 40,\n            alpha: 0,\n            duration: 600,\n            ease: 'Power2',\n            onComplete: () => noteText.destroy()\n        });\n\n        // Screen flash effect for good hits\n        const flash = this.add.rectangle(\n            this.cameras.main.scrollX + this.cameras.main.width / 2,\n            this.cameras.main.scrollY + this.cameras.main.height / 2,\n            this.cameras.main.width,\n            this.cameras.main.height,\n            0xffffff,\n            0.1\n        );\n        flash.setScrollFactor(0);\n        \n        this.tweens.add({\n            targets: flash,\n            alpha: 0,\n            duration: 100,\n            onComplete: () => flash.destroy()\n        });\n    }\n\n    private createPlatform(): void {\n        const { height } = this.cameras.main;\n        \n        // Create platform ahead of character with some randomness\n        const platformX = this.character.x + 120 + Math.random() * 80;\n        const platformY = height - 80 - Math.random() * 150;\n        const platformWidth = 80 + Math.random() * 40;\n        \n        const platform = this.add.rectangle(platformX, platformY, platformWidth, 20, 0x2ecc71);\n        this.physics.add.existing(platform, true);\n        this.platforms.add(platform);\n\n        // Platform creation effect\n        platform.setAlpha(0);\n        platform.setScale(0.1);\n        this.tweens.add({\n            targets: platform,\n            alpha: 1,\n            scaleX: 1,\n            scaleY: 1,\n            duration: 200,\n            ease: 'Back.easeOut'\n        });\n\n        // Simple visual effect instead of particles\n        const effect = this.add.circle(platformX, platformY, 20, 0x2ecc71, 0.5);\n        this.tweens.add({\n            targets: effect,\n            scaleX: 2,\n            scaleY: 2,\n            alpha: 0,\n            duration: 300,\n            ease: 'Power2',\n            onComplete: () => effect.destroy()\n        });\n    }\n\n    private updateScore(points: number): void {\n        this.score += points * (1 + this.streak * 0.1);\n        this.streak++;\n        \n        this.scoreText.setText(`Score: ${Math.floor(this.score)}`);\n        this.streakText.setText(`Streak: ${this.streak}`);\n        \n        // Streak visual feedback\n        if (this.streak > 0 && this.streak % 5 === 0) {\n            const streakBonus = this.add.text(this.character.x, this.character.y - 80, `${this.streak}x STREAK!`, {\n                fontSize: '20px',\n                color: '#e74c3c',\n                fontFamily: 'Arial, sans-serif'\n            }).setOrigin(0.5);\n\n            this.tweens.add({\n                targets: streakBonus,\n                y: streakBonus.y - 40,\n                alpha: 0,\n                scale: 1.5,\n                duration: 1200,\n                ease: 'Power2',\n                onComplete: () => streakBonus.destroy()\n            });\n        }\n    }\n\n    private gameOver(): void {\n        this.isGameRunning = false;\n        this.streak = 0;\n        \n        const { width, height } = this.cameras.main;\n        \n        // Stop camera follow\n        this.cameras.main.stopFollow();\n        \n        // Game over screen\n        const gameOverBg = this.add.rectangle(\n            this.cameras.main.scrollX + width / 2,\n            this.cameras.main.scrollY + height / 2,\n            width,\n            height,\n            0x000000,\n            0.8\n        );\n        gameOverBg.setScrollFactor(0);\n        \n        const gameOverTitle = this.add.text(\n            this.cameras.main.scrollX + width / 2,\n            this.cameras.main.scrollY + height / 2 - 80,\n            'Game Over!',\n            {\n                fontSize: '48px',\n                color: '#e74c3c',\n                fontFamily: 'Arial, sans-serif'\n            }\n        ).setOrigin(0.5).setScrollFactor(0);\n\n        const finalScore = this.add.text(\n            this.cameras.main.scrollX + width / 2,\n            this.cameras.main.scrollY + height / 2 - 20,\n            `Final Score: ${Math.floor(this.score)}`,\n            {\n                fontSize: '24px',\n                color: '#ffffff',\n                fontFamily: 'Arial, sans-serif'\n            }\n        ).setOrigin(0.5).setScrollFactor(0);\n\n        const restartText = this.add.text(\n            this.cameras.main.scrollX + width / 2,\n            this.cameras.main.scrollY + height / 2 + 30,\n            'Press R to restart or ESC for menu',\n            {\n                fontSize: '18px',\n                color: '#bdc3c7',\n                fontFamily: 'Arial, sans-serif'\n            }\n        ).setOrigin(0.5).setScrollFactor(0);\n\n        // Pulsing restart text\n        this.tweens.add({\n            targets: restartText,\n            alpha: 0.5,\n            duration: 1000,\n            yoyo: true,\n            repeat: -1\n        });\n\n        // Send score to parent (Reddit)\n        if (window.parent) {\n            window.parent.postMessage({\n                type: 'GAME_OVER',\n                data: { finalScore: Math.floor(this.score) }\n            }, '*');\n        }\n    }\n}","import { Scene, GameObjects } from 'phaser';\n\nexport class MainMenu extends Scene {\n  private title: GameObjects.Text | null = null;\n  private subtitle: GameObjects.Text | null = null;\n  private instructions: GameObjects.Text | null = null;\n  private startText: GameObjects.Text | null = null;\n  private credits: GameObjects.Text | null = null;\n\n  constructor() {\n    super('MainMenu');\n  }\n\n  init(): void {\n    this.title = null;\n    this.subtitle = null;\n    this.instructions = null;\n    this.startText = null;\n    this.credits = null;\n  }\n\n  create() {\n    this.refreshLayout();\n\n    // Re-calculate positions whenever the game canvas is resized\n    this.scale.on('resize', () => this.refreshLayout());\n\n    // Start game on click or space\n    this.input.once('pointerdown', () => {\n      this.scene.start('MuseRunnerGame');\n    });\n\n    this.input.keyboard!.on('keydown-SPACE', () => {\n      this.scene.start('MuseRunnerGame');\n    });\n  }\n\n  private refreshLayout(): void {\n    const { width, height } = this.scale;\n\n    // Resize camera to new viewport\n    this.cameras.resize(width, height);\n\n    // Background\n    this.add.rectangle(width / 2, height / 2, width, height, 0x2c3e50);\n\n    // Scale factor for responsive design\n    const scaleFactor = Math.min(width / 1024, height / 768);\n\n    // Title\n    if (!this.title) {\n      this.title = this.add.text(0, 0, '🎵 Muse Runner 🏃‍♂️', {\n        fontSize: '48px',\n        color: '#ffffff',\n        fontFamily: 'Arial, sans-serif'\n      }).setOrigin(0.5);\n    }\n    this.title.setPosition(width / 2, height / 3);\n    this.title.setScale(scaleFactor);\n\n    // Subtitle\n    if (!this.subtitle) {\n      this.subtitle = this.add.text(0, 0, 'Rhythm Platformer', {\n        fontSize: '24px',\n        color: '#3498db',\n        fontFamily: 'Arial, sans-serif'\n      }).setOrigin(0.5);\n    }\n    this.subtitle.setPosition(width / 2, height / 3 + 60 * scaleFactor);\n    this.subtitle.setScale(scaleFactor);\n\n    // Instructions\n    if (!this.instructions) {\n      this.instructions = this.add.text(0, 0, \n        'Control your character by playing musical notes!\\n\\nPress S-D-F-G-H-J-K keys to create platforms\\nKeep your character from falling off the screen', {\n        fontSize: '18px',\n        color: '#ecf0f1',\n        fontFamily: 'Arial, sans-serif',\n        align: 'center'\n      }).setOrigin(0.5);\n    }\n    this.instructions.setPosition(width / 2, height / 2);\n    this.instructions.setScale(scaleFactor);\n\n    // Start button text\n    if (!this.startText) {\n      this.startText = this.add.text(0, 0, 'Click to Start or Press SPACE', {\n        fontSize: '24px',\n        color: '#2ecc71',\n        fontFamily: 'Arial, sans-serif'\n      }).setOrigin(0.5);\n\n      // Pulsing effect\n      this.tweens.add({\n        targets: this.startText,\n        alpha: 0.5,\n        duration: 1000,\n        yoyo: true,\n        repeat: -1\n      });\n    }\n    this.startText.setPosition(width / 2, height * 0.75);\n    this.startText.setScale(scaleFactor);\n\n    // Credits\n    if (!this.credits) {\n      this.credits = this.add.text(0, 0, 'Built with Phaser.js for Reddit\\'s Community Games Challenge', {\n        fontSize: '14px',\n        color: '#95a5a6',\n        fontFamily: 'Arial, sans-serif'\n      }).setOrigin(0.5);\n    }\n    this.credits.setPosition(width / 2, height - 40);\n    this.credits.setScale(scaleFactor * 0.8);\n  }\n}\n","import { Scene } from 'phaser';\n\nexport class Preloader extends Scene {\n  constructor() {\n    super('Preloader');\n  }\n\n  init() {\n    //  We loaded this image in our Boot Scene, so we can display it here\n    this.add.image(512, 384, 'background');\n\n    //  A simple progress bar. This is the outline of the bar.\n    this.add.rectangle(512, 384, 468, 32).setStrokeStyle(1, 0xffffff);\n\n    //  This is the progress bar itself. It will increase in size from the left based on the % of progress.\n    const bar = this.add.rectangle(512 - 230, 384, 4, 28, 0xffffff);\n\n    //  Use the 'progress' event emitted by the LoaderPlugin to update the loading bar\n    this.load.on('progress', (progress: number) => {\n      //  Update the progress bar (our bar is 464px wide, so 100% = 464px)\n      bar.width = 4 + 460 * progress;\n    });\n  }\n\n  preload() {\n    //  Load the assets for the game - Replace with your own assets\n    this.load.setPath('assets');\n\n    this.load.image('logo', 'logo.png');\n\n    // Assets loaded - spark texture removed to fix freezing issue\n  }\n\n  create() {\n    //  When all the assets have loaded, it's often worth creating global objects here that the rest of the game can use.\n    //  For example, you can define global animations here, so we can use them in other scenes.\n\n    //  Move to the MainMenu. You could also swap this for a Scene Transition, such as a camera fade.\n    this.scene.start('MainMenu');\n  }\n}\n","import { Boot } from './scenes/Boot';\nimport { GameOver } from './scenes/GameOver';\nimport { MuseRunnerGame } from './scenes/MuseRunnerGame';\nimport { MainMenu } from './scenes/MainMenu';\nimport * as Phaser from 'phaser';\nimport { AUTO, Game } from 'phaser';\nimport { Preloader } from './scenes/Preloader';\n\n//  Muse Runner - Rhythm Platformer Game Configuration\nconst config: Phaser.Types.Core.GameConfig = {\n  type: AUTO,\n  parent: 'game-container',\n  backgroundColor: '#2c3e50',\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 600 },\n      debug: false\n    }\n  },\n  scale: {\n    mode: Phaser.Scale.RESIZE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: 1024,\n    height: 768,\n  },\n  scene: [Boot, Preloader, MainMenu, MuseRunnerGame, GameOver],\n};\n\nconst StartGame = (parent: string) => {\n  return new Game({ ...config, parent });\n};\n\nexport default StartGame;\n","import StartGame from './game/main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  StartGame('game-container');\n});\n"],"names":["Boot","Scene","constructor","super","preload","this","load","image","create","scene","start","GameOver","__publicField","camera","cameras","main","setBackgroundColor","background","add","setOrigin","setAlpha","gameover_text","text","fontFamily","fontSize","color","stroke","strokeThickness","align","updateLayout","scale","width","height","on","gameSize","input","once","resize","setDisplaySize","scaleFactor","Math","min","setPosition","setScale","MuseRunnerGame","S","D","F","G","H","J","K","character","rectangle","physics","existing","characterBody","body","setCollideWorldBounds","setBounce","platforms","group","initialPlatform","collider","gameKeys","keyboard","addKey","Phaser","Input","Keyboard","KeyCodes","scoreText","streakText","instructionText","tweens","targets","alpha","duration","yoyo","repeat","restart","isGameRunning","startFollow","setDeadzone","score","streak","characterSpeed","update","setVelocityX","Object","keys","forEach","key","JustDown","playNote","createPlatform","updateScore","y","gameOver","children","entries","platform","x","destroy","console","log","noteFrequencies","setTint","time","delayedCall","clearTint","noteText","ease","onComplete","flash","scrollX","scrollY","setScrollFactor","platformX","random","platformY","platformWidth","scaleX","scaleY","effect","circle","points","setText","floor","streakBonus","stopFollow","restartText","window","parent","postMessage","type","data","finalScore","MainMenu","init","title","subtitle","instructions","startText","credits","refreshLayout","Preloader","setStrokeStyle","bar","progress","setPath","config","AUTO","backgroundColor","default","arcade","gravity","debug","mode","Phaser.Scale","RESIZE","autoCenter","CENTER_BOTH","document","addEventListener","Game"],"mappings":"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"}