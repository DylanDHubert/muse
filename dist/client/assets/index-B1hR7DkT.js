var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{r as i}from"./phaser-CRaLQf_f.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();var s=i();class a extends s.Scene{constructor(){super("Boot")}preload(){}create(){this.scene.start("Preloader")}}class n extends s.Scene{constructor(){super("GameOver"),e(this,"camera"),e(this,"background"),e(this,"gameOverText")}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor(16711680),this.background=this.add.image(0,0,"background").setOrigin(0).setAlpha(.5),this.gameOverText=this.add.text(0,0,"Game Over",{fontFamily:"Arial Black",fontSize:"64px",color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.updateLayout(this.scale.width,this.scale.height),this.scale.on("resize",(t=>{const{width:e,height:i}=t;this.updateLayout(e,i)})),this.input.once("pointerdown",(()=>{this.scene.start("MainMenu")}))}updateLayout(t,e){this.cameras.resize(t,e),this.background&&this.background.setDisplaySize(t,e);const i=Math.min(Math.min(t/1024,e/768),1);this.gameOverText&&(this.gameOverText.setPosition(t/2,e/2),this.gameOverText.setScale(i))}}const o={CHARACTER:{SPEED:100,WIDTH:30,HEIGHT:40,COLOR:3447003,VISUAL_FEEDBACK_COLOR:15965202,VISUAL_FEEDBACK_DURATION:200},PLATFORMS:{WIDTH:120,HEIGHT:20,EXTENSION_DISTANCE:150,AHEAD_OFFSET:20,CLEANUP_DISTANCE:400,MIN_LENGTH:20,GROWTH_RATE:100},AUDIO:{NOTE_DURATION:.5,ATTACK_TIME:.01,VOLUME:.3},GAME:{OVER_FALL_DISTANCE:300,SCORE_PER_PLATFORM:10,GROUND_OFFSET:60,CHARACTER_HEIGHT_LERP_SPEED:.08,FALL_VELOCITY:300,CAMERA_DEADZONE_X:200,CAMERA_DEADZONE_Y:100,CAMERA_FOLLOW_LERP_X:.1,CAMERA_FOLLOW_LERP_Y:.1},CHORD_DETECTION:{ACCUMULATION_TIME:1e3,TRIAD_POINTS:50,SEVENTH_POINTS:100,POWER_CHORD_POINTS:25},LEVEL_HEIGHTS:{S:-80,D:-120,F:-160,G:-200,H:-240,J:-280,K:-320,R:-100,U:-260,I:-300},LEVEL_COLORS:{S:15158332,D:15965202,F:15844367,G:3066993,H:3447003,J:10181046,K:15277667,R:16739179,U:5164484,I:4569041},VALID_KEYS:["S","D","F","G","H","J","K","R","U","I","A","L",";","'"],ERROR_HANDLING:{MANAGER_INIT_FAILED:"Failed to initialize managers",INPUT_HANDLING_ERROR:"Input handling error",PLATFORM_EXTENSION_ERROR:"Platform extension error",CHARACTER_HEIGHT_ERROR:"Character height update error",PLATFORM_CLEANUP_ERROR:"Platform cleanup error",KEY_CHANGE_ERROR:"Key change handling error",PLATFORM_START_ERROR:"Failed to start platform",PLATFORM_END_ERROR:"Failed to end platform"}},r={S:261.63,D:293.66,F:329.63,G:349.23,H:392,J:440,K:493.88,R:311.13,U:415.3,I:466.16,A:246.94,L:523.25,";":587.33,"'":659.25};class c{constructor(){e(this,"audioContext",null),e(this,"isInitialized",!1),e(this,"audioAvailable",!1),e(this,"lfoRate",2),e(this,"chorusDepth",.1),e(this,"filterFrequency",2e3),e(this,"reverbAmount",.3),e(this,"distortionAmount",.2),e(this,"activeNotes",new Map)}initialize(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.audioAvailable=!0,this.isInitialized=!0}catch(t){console.warn("Web Audio API not available:",t),this.audioAvailable=!1,this.isInitialized=!0}}playNote(t){if(!this.isInitialized)return void console.warn("AudioManager not initialized");if(!this.audioAvailable||!this.audioContext)return;const e=r[t];if(e){if(!this.activeNotes.has(t))try{this.startSustainedNote(t,e)}catch(i){console.warn("Failed to play note:",i)}}else console.warn(`Unknown key: ${t}`)}stopNote(t){const e=this.activeNotes.get(t);if(e){const i=this.audioContext.currentTime;e.gainNode.gain.exponentialRampToValueAtTime(.001,i+.1),setTimeout((()=>{e.oscillators.forEach((t=>{try{t.stop(),t.disconnect()}catch(e){}})),e.gainNode.disconnect(),this.activeNotes.delete(t)}),100)}}isAudioAvailable(){return this.audioAvailable}updateLFORate(t){this.lfoRate=Math.max(.1,Math.min(10,this.lfoRate+t)),console.log(`LFO Rate: ${this.lfoRate.toFixed(1)} Hz`)}updateChorusDepth(t){this.chorusDepth=Math.max(0,Math.min(1,this.chorusDepth+t)),console.log(`Chorus Depth: ${(100*this.chorusDepth).toFixed(0)}%`)}updateFilterFrequency(t){this.filterFrequency=Math.max(100,Math.min(8e3,this.filterFrequency+100*t)),console.log(`Filter Frequency: ${this.filterFrequency.toFixed(0)} Hz`)}updateReverbAmount(t){this.reverbAmount=Math.max(0,Math.min(1,this.reverbAmount+t)),console.log(`Reverb Amount: ${(100*this.reverbAmount).toFixed(0)}%`)}getLFORate(){return this.lfoRate}getChorusDepth(){return this.chorusDepth}getFilterFrequency(){return this.filterFrequency}getReverbAmount(){return this.reverbAmount}getDistortionAmount(){return this.distortionAmount}startSustainedNote(t,e){if(!this.audioContext)return;const i=this.audioContext.createOscillator(),s=this.audioContext.createOscillator(),a=this.audioContext.createGain();s.frequency.setValueAtTime(this.lfoRate,this.audioContext.currentTime),s.type="sine",a.gain.setValueAtTime(2,this.audioContext.currentTime),s.connect(a),a.connect(i.frequency),i.frequency.setValueAtTime(e,this.audioContext.currentTime),i.type="sawtooth";const n=this.audioContext.createOscillator(),r=this.audioContext.createOscillator(),c=this.audioContext.createGain(),h=this.audioContext.createGain(),l=10*this.chorusDepth;n.frequency.setValueAtTime(e+l,this.audioContext.currentTime),r.frequency.setValueAtTime(e-l,this.audioContext.currentTime),n.type="sawtooth",r.type="sawtooth",c.gain.setValueAtTime(.2,this.audioContext.currentTime),h.gain.setValueAtTime(.2,this.audioContext.currentTime);const u=this.audioContext.createBiquadFilter();u.type="lowpass",u.frequency.setValueAtTime(this.filterFrequency,this.audioContext.currentTime),u.Q.setValueAtTime(.5,this.audioContext.currentTime);const d=this.audioContext.createWaveShaper(),m=this.createDistortionCurve(.5*this.distortionAmount);d.curve=m,d.oversample="2x";const p=this.audioContext.createGain();i.connect(p),n.connect(c).connect(p),r.connect(h).connect(p),p.connect(u),u.connect(d),d.connect(this.audioContext.destination);const y=this.audioContext.currentTime;p.gain.setValueAtTime(0,y),p.gain.linearRampToValueAtTime(.5*o.AUDIO.VOLUME,y+.01),i.start(y),s.start(y),n.start(y),r.start(y),this.activeNotes.set(t,{oscillators:[i,s,n,r],gainNode:p,isSustaining:!0})}playMusicalTone(t){if(!this.audioContext)return;const e=this.audioContext.createOscillator(),i=this.audioContext.createOscillator(),s=this.audioContext.createGain();i.frequency.setValueAtTime(this.lfoRate,this.audioContext.currentTime),i.type="sine",s.gain.setValueAtTime(5,this.audioContext.currentTime),i.connect(s),s.connect(e.frequency),e.frequency.setValueAtTime(t,this.audioContext.currentTime),e.type="sawtooth";const a=this.audioContext.createOscillator(),n=this.audioContext.createOscillator(),r=this.audioContext.createGain(),c=this.audioContext.createGain(),h=20*this.chorusDepth;a.frequency.setValueAtTime(t+h,this.audioContext.currentTime),n.frequency.setValueAtTime(t-h,this.audioContext.currentTime),a.type="sawtooth",n.type="sawtooth",r.gain.setValueAtTime(.3,this.audioContext.currentTime),c.gain.setValueAtTime(.3,this.audioContext.currentTime);const l=this.audioContext.createBiquadFilter();l.type="lowpass",l.frequency.setValueAtTime(this.filterFrequency,this.audioContext.currentTime),l.Q.setValueAtTime(1,this.audioContext.currentTime);const u=this.audioContext.createWaveShaper(),d=this.createDistortionCurve(this.distortionAmount);u.curve=d,u.oversample="4x";const m=this.audioContext.createDelay(),p=this.audioContext.createGain(),y=this.audioContext.createGain();m.delayTime.setValueAtTime(.1,this.audioContext.currentTime),p.gain.setValueAtTime(.3*this.reverbAmount,this.audioContext.currentTime),y.gain.setValueAtTime(.1,this.audioContext.currentTime);const A=this.audioContext.createGain();e.connect(A),a.connect(r).connect(A),n.connect(c).connect(A),A.connect(l),l.connect(u);const C=this.audioContext.createGain(),E=this.audioContext.createGain();C.gain.setValueAtTime(1-this.reverbAmount,this.audioContext.currentTime),E.gain.setValueAtTime(this.reverbAmount,this.audioContext.currentTime),u.connect(C),u.connect(E),E.connect(m),m.connect(y),y.connect(m),m.connect(f);const f=this.audioContext.createGain();C.connect(f),E.connect(f),f.connect(this.audioContext.destination);const g=this.audioContext.currentTime,T=o.AUDIO.NOTE_DURATION;f.gain.setValueAtTime(0,g),f.gain.linearRampToValueAtTime(o.AUDIO.VOLUME,g+.01),f.gain.linearRampToValueAtTime(.7*o.AUDIO.VOLUME,g+.01+.1),f.gain.exponentialRampToValueAtTime(.001,g+T),e.start(g),i.start(g),a.start(g),n.start(g);const R=g+T;e.stop(R),i.stop(R),a.stop(R),n.stop(R)}createDistortionCurve(t){const e=44100,i=new Float32Array(e),s=Math.PI/180;for(let a=0;a<e;a++){const n=2*a/e-1;i[a]=(3+t)*n*20*s/(Math.PI+t*Math.abs(n))}return i}}class h{constructor(t){e(this,"scene"),e(this,"currentlyPressedKeys",new Set),e(this,"previouslyPressedKeys",new Set),e(this,"isInitialized",!1),e(this,"keyObjects",new Map),e(this,"arrowKeys",{up:null,down:null,left:null,right:null}),this.scene=t}initialize(){this.scene.input.keyboard?(o.VALID_KEYS.forEach((t=>{";"===t?this.keyObjects.set(t,this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.SEMICOLON)):"'"===t?this.keyObjects.set(t,this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.QUOTES)):this.keyObjects.set(t,this.scene.input.keyboard.addKey(t))})),this.arrowKeys.up=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.UP),this.arrowKeys.down=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.DOWN),this.arrowKeys.left=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.LEFT),this.arrowKeys.right=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.RIGHT),this.keyObjects.set("1",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.ONE)),this.keyObjects.set("2",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.TWO)),this.keyObjects.set("3",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.THREE)),this.keyObjects.set("4",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.FOUR)),this.isInitialized=!0):console.warn("Keyboard input not available")}update(t){return this.isInitialized&&this.scene.input.keyboard?(this.previouslyPressedKeys=new Set(this.currentlyPressedKeys),this.currentlyPressedKeys.clear(),o.VALID_KEYS.forEach((t=>{const e=this.keyObjects.get(t);e&&e.isDown&&this.currentlyPressedKeys.add(t)})),{keyStateChanged:this.hasKeyStateChanged()}):{keyStateChanged:!1}}getInputState(){return{pressedKeys:new Set(this.currentlyPressedKeys)}}getArrowKeyState(){var t,e,i,s;return{up:(null==(t=this.arrowKeys.up)?void 0:t.isDown)||!1,down:(null==(e=this.arrowKeys.down)?void 0:e.isDown)||!1,left:(null==(i=this.arrowKeys.left)?void 0:i.isDown)||!1,right:(null==(s=this.arrowKeys.right)?void 0:s.isDown)||!1}}hasKeyStateChanged(){if(this.currentlyPressedKeys.size!==this.previouslyPressedKeys.size)return!0;for(const t of this.currentlyPressedKeys)if(!this.previouslyPressedKeys.has(t))return!0;for(const t of this.previouslyPressedKeys)if(!this.currentlyPressedKeys.has(t))return!0;return!1}isValidGameKey(t){return o.VALID_KEYS.includes(t)}}class l{constructor(t){e(this,"scene"),e(this,"activePlatforms",new Map),e(this,"platformsGroup"),e(this,"isInitialized",!1),this.scene=t,this.platformsGroup=this.scene.add.group()}initialize(){this.isInitialized=!0}startNewPlatform(t,e){if(!this.isInitialized)return void console.warn("PlatformManager not initialized");if(this.activePlatforms.has(t))return;const{height:i}=this.scene.cameras.main,s=i+o.LEVEL_HEIGHTS[t],a=o.LEVEL_COLORS[t],n=this.scene.add.rectangle(e+o.PLATFORMS.AHEAD_OFFSET,s,o.PLATFORMS.MIN_LENGTH,o.PLATFORMS.HEIGHT,a);this.scene.physics.add.existing(n,!0);const r={rectangle:n,startX:e,key:t,startTime:this.scene.time.now,isGrowing:!0};this.activePlatforms.set(t,r),this.platformsGroup.add(n)}endPlatform(t){const e=this.activePlatforms.get(t);e&&(e.isGrowing=!1,this.activePlatforms.delete(t))}extendActivePlatforms(t){this.activePlatforms.forEach(((e,i)=>{if(!e.isGrowing)return;const s=e.rectangle,a=t-e.startX,n=Math.max(o.PLATFORMS.MIN_LENGTH,o.PLATFORMS.MIN_LENGTH+a),r=s.x-s.width/2+n/2;s.setSize(n,s.height),s.setPosition(r,s.y)}))}getHighestActiveKey(){if(0===this.activePlatforms.size)return null;let t=null,e=Number.POSITIVE_INFINITY;return this.activePlatforms.forEach(((i,s)=>{const a=o.LEVEL_HEIGHTS[s];a<e&&(e=a,t=s)})),t}hasActivePlatforms(){return this.activePlatforms.size>0}cleanupOldPlatforms(t){const e=[];this.platformsGroup.children.entries.forEach((i=>{const s=i;s.x+s.width/2<t-o.PLATFORMS.CLEANUP_DISTANCE&&e.push(s)})),e.forEach((t=>{this.platformsGroup.remove(t),t.destroy()}))}getActivePlatforms(){return new Map(this.activePlatforms)}getPlatformsGroup(){return this.platformsGroup}getLevelHeight(t){return o.LEVEL_HEIGHTS[t]}getLevelColor(t){return o.LEVEL_COLORS[t]}}const u={S:"C",D:"D",F:"E",G:"F",H:"G",J:"A",K:"B",R:"D#",U:"G#",I:"Bb",A:"B",L:"C",";":"D","'":"E"},d={"C,E,G":{name:"C Major (I)",points:50},"A,D,F":{name:"D Minor (ii)",points:50},"B,E,G":{name:"E Minor (iii)",points:50},"A,C,F":{name:"F Major (IV)",points:50},"B,D,G":{name:"G Major (V)",points:50},"A,C,E":{name:"A Minor (vi)",points:50},"B,D,F":{name:"B Diminished (vii°)",points:50},"B,C,E,G":{name:"C Major 7 (IΔ7)",points:100},"A,C,D,F":{name:"D Minor 7 (ii7)",points:100},"B,D,E,G":{name:"E Minor 7 (iii7)",points:100},"A,C,E,F":{name:"F Major 7 (IVΔ7)",points:100},"B,D,F,G":{name:"G Dominant 7 (V7)",points:100},"A,C,E,G":{name:"A Minor 7 (vi7)",points:100},"A,B,D,F":{name:"B Half-Diminished 7 (viiø7)",points:100},"B,C,D,E,G":{name:"C Major 9",points:150},"A,C,D,E,F":{name:"D Minor 9",points:150},"A,B,D,F,G":{name:"G9 (Dominant 9)",points:150},"A,B,C,E,G":{name:"A Minor 9",points:150},"C,F,G":{name:"Csus4",points:50},"C,D,G":{name:"Csus2",points:50},"A,D,G":{name:"Dsus4",points:50},"C,D,E,G":{name:"Cadd9",points:75},"C,G":{name:"C5",points:25},"A,D":{name:"D5",points:25},"B,E":{name:"E5",points:25},"C,F":{name:"F5",points:25},"D,G":{name:"G5",points:25},"A,E":{name:"A5",points:25},"B,F":{name:"B5",points:25}},m={"A,C,D#":{name:"A Diminished (viio/iii)",points:50},"A,C#,E":{name:"A Major (V/ii)",points:50},"A,D,F#":{name:"D Major (V/V)",points:50},"A#,C#,E":{name:"A# Diminished (viio/bII)",points:50},"A#,C,D,F":{name:"F Minor (iv)",points:50},"A#,F,G#":{name:"F Augmented (IV+)",points:50},"A#,D,F":{name:"Bb Major (bVII)",points:50},"A#,D,G":{name:"G Minor (v)",points:50},"A#,D,G#":{name:"Ab Major (bVI)",points:50},"B,D#,G#":{name:"G# Minor (iii/vi)",points:50},"C,D#,G":{name:"C Minor (i)",points:50},"A#,C,D#,G":{name:"C Minor 7 (i7)",points:100},"C,E,G#":{name:"C Augmented (I+)",points:50},"B,C,E,G#":{name:"C Augmented Major 7 (I+Δ7)",points:100},"C#,E,G#":{name:"C# Diminished (viio/ii)",points:50},"C#,F,G#":{name:"C# Minor (ii/ii)",points:50},"B,C#,F,G#":{name:"C# Minor 7 (ii7/ii)",points:100},"D,F,G#":{name:"D Augmented (II+)",points:50},"A#,D#,G":{name:"Eb Minor (biii)",points:50},"B,D#,G":{name:"D# Diminished",points:50},"B,E,G#":{name:"E Major (III)",points:50},"B,D,E,G#":{name:"E Dominant 7 (V7/vi)",points:100},"C,F,G#":{name:"F Augmented (IV+)",points:50},"A#,C,F":{name:"F Minor (iv)",points:50},"A#,C,F,G#":{name:"F Augmented (IV+)",points:50},"A#,F":{name:"Bb5 (bVII5)",points:25},"A#,D#":{name:"Eb5 (bIII5)",points:25},"D#,G#":{name:"Ab5 (bVI5)",points:25}};function p(t){return t.map((t=>u[t]||t))}class y{constructor(t){e(this,"scene"),e(this,"currentChord",null),this.scene=t}update(t){const e=Array.from(t).sort(),i=p(e),s=i.join(",");t.size>1&&(console.log("Keys pressed:",e.join(",")),console.log("Notes:",i.join(",")),console.log("Looking for chord:",s));const a=(n=e,function(t){const e=[...t].sort().join(",");console.log("Looking for chord:",e),console.log("Available main chords:",Object.keys(d).length),console.log("Available extended chords:",Object.keys(m).length);const i=d[e];if(i)return console.log("✅ Found in main chords:",i.name),i;const s=m[e];return s?(console.log("✅ Found in extended chords:",s.name),s):(console.log("❌ No chord found for:",e),null)}(p([...n].sort())));var n;if(a){console.log("✅ Chord detected:",a.name),this.currentChord&&this.currentChord.chordType===a.name||(this.currentChord={chordType:a.name,basePoints:a.points,accumulatedPoints:0,startTime:this.scene.time.now,isComplete:!1});const t=this.scene.time.now-this.currentChord.startTime,e=Math.min(t/o.CHORD_DETECTION.ACCUMULATION_TIME,1),i=Math.floor(this.currentChord.basePoints*e),s=i-this.currentChord.accumulatedPoints;return this.currentChord.accumulatedPoints=i,e>=1&&!this.currentChord.isComplete&&(this.currentChord.isComplete=!0),{points:s,chordName:this.currentChord.chordType}}return t.size>1&&console.log("❌ No chord found for:",s),this.currentChord=null,{points:0,chordName:null}}getCurrentChord(){return this.currentChord}}class A extends s.Scene{constructor(){super("MuseRunnerGame"),e(this,"character"),e(this,"scoreText"),e(this,"isGameRunning",!1),e(this,"score",0),e(this,"synthDisplay"),e(this,"audioManager"),e(this,"inputManager"),e(this,"platformManager"),e(this,"chordDetector")}async create(){const{width:t,height:e}=this.cameras.main;try{this.audioManager=new c,this.inputManager=new h(this),this.platformManager=new l(this),this.chordDetector=new y(this),this.audioManager.initialize(),this.inputManager.initialize(),this.platformManager.initialize()}catch(s){console.error(o.ERROR_HANDLING.MANAGER_INIT_FAILED,s)}this.character=this.add.image(100,e-80,"player"),this.character.setDepth(1e3),this.physics.add.existing(this.character);const i=this.character.body;i.setCollideWorldBounds(!1),i.setDragX(0),i.setFrictionX(0),i.setGravityY(0),this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"24px",color:"#ffffff",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2}),this.scoreText.setScrollFactor(0),this.synthDisplay=this.add.text(16,50,"SYNTH CONTROLS:\n↑↓ LFO Rate | ←→ Chorus\n1/2 Filter | 3/4 Reverb",{fontSize:"16px",color:"#ffff00",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:1}),this.synthDisplay.setScrollFactor(0),this.add.text(t-16,16,"v0.0.4 | ESC: Menu | T: Restart",{fontSize:"14px",color:"#95a5a6",fontFamily:"Nabla, system-ui"}).setOrigin(1,0).setScrollFactor(0),this.input.keyboard.on("keydown-ESC",(()=>{this.scene.start("MainMenu")})),this.input.keyboard.on("keydown-T",(()=>{this.scene.restart()})),this.isGameRunning=!0,this.cameras.main.startFollow(this.character,!0,o.GAME.CAMERA_FOLLOW_LERP_X,o.GAME.CAMERA_FOLLOW_LERP_Y),this.cameras.main.setDeadzone(o.GAME.CAMERA_DEADZONE_X,o.GAME.CAMERA_DEADZONE_Y),this.score=0}update(){if(!this.isGameRunning)return;const t=this.character.body;t.setVelocityX(o.CHARACTER.SPEED),t.setDragX(0),t.setFrictionX(0);try{const{keyStateChanged:t}=this.inputManager.update(this.time.now),e=this.inputManager.getInputState(),i=this.inputManager.getArrowKeyState();i.up&&this.audioManager.updateLFORate(.1),i.down&&this.audioManager.updateLFORate(-.1),i.left&&this.audioManager.updateChorusDepth(-.05),i.right&&this.audioManager.updateChorusDepth(.05),e.pressedKeys.has("1")&&this.audioManager.updateFilterFrequency(-50),e.pressedKeys.has("2")&&this.audioManager.updateFilterFrequency(50),e.pressedKeys.has("3")&&this.audioManager.updateReverbAmount(-.05),e.pressedKeys.has("4")&&this.audioManager.updateReverbAmount(.05),this.updateSynthesisDisplay(),t&&this.handleKeyChanges(e.pressedKeys);const s=this.chordDetector.update(e.pressedKeys);s.points>0&&(this.score+=s.points,this.scoreText.setText(`Score: ${Math.floor(this.score)}`),s.chordName&&s.points>0&&this.showChordName(s.chordName,s.points))}catch(e){console.warn(o.ERROR_HANDLING.INPUT_HANDLING_ERROR,e)}try{this.platformManager.hasActivePlatforms()&&this.platformManager.extendActivePlatforms(this.character.x)}catch(e){console.warn(o.ERROR_HANDLING.PLATFORM_EXTENSION_ERROR,e)}try{this.updateCharacterHeight()}catch(e){console.warn(o.ERROR_HANDLING.CHARACTER_HEIGHT_ERROR,e)}}updateSynthesisDisplay(){const t=this.audioManager.getLFORate(),e=this.audioManager.getChorusDepth(),i=this.audioManager.getFilterFrequency(),s=this.audioManager.getReverbAmount();this.synthDisplay.setText(`SYNTH CONTROLS:\n↑↓ LFO: ${t.toFixed(1)}Hz | ←→ Chorus: ${(100*e).toFixed(0)}%\n1/2 Filter: ${i.toFixed(0)}Hz | 3/4 Reverb: ${(100*s).toFixed(0)}%`),this.character.y>this.cameras.main.height+o.GAME.OVER_FALL_DISTANCE&&this.gameOver();try{this.platformManager.cleanupOldPlatforms(this.character.x)}catch(a){console.warn(o.ERROR_HANDLING.PLATFORM_CLEANUP_ERROR,a)}}handleKeyChanges(t){try{const e=this.platformManager.getActivePlatforms();t.forEach((t=>{if(this.isValidGameKey(t)&&!e.has(t))try{this.platformManager.startNewPlatform(t,this.character.x),this.audioManager.playNote(t),this.character.setScale(1.2),this.time.delayedCall(o.CHARACTER.VISUAL_FEEDBACK_DURATION,(()=>{this.character.setScale(1)})),this.score+=o.GAME.SCORE_PER_PLATFORM,this.scoreText.setText(`Score: ${Math.floor(this.score)}`)}catch(i){console.warn(`${o.ERROR_HANDLING.PLATFORM_START_ERROR} for key ${t}:`,i)}})),e.forEach(((e,i)=>{if(!t.has(i))try{this.platformManager.endPlatform(i),this.audioManager.stopNote(i)}catch(s){console.warn(`${o.ERROR_HANDLING.PLATFORM_END_ERROR} for key ${i}:`,s)}}))}catch(e){console.error(o.ERROR_HANDLING.KEY_CHANGE_ERROR,e)}}isValidGameKey(t){return o.VALID_KEYS.includes(t)}updateCharacterHeight(){const t=this.character.body,e=this.platformManager.getHighestActiveKey();if(e){const{height:i}=this.cameras.main,a=i+o.LEVEL_HEIGHTS[e],n=this.character.y,r=a-n;if(Math.abs(r)>.5){const e=s.Math.Linear(n,a,o.GAME.CHARACTER_HEIGHT_LERP_SPEED);this.character.y=e,t.setVelocityY(0)}else this.character.y=a,t.setVelocityY(0)}else{const{height:e}=this.cameras.main,i=e-o.GAME.GROUND_OFFSET;this.character.y<i?t.setVelocityY(o.GAME.FALL_VELOCITY):(this.character.y=i,t.setVelocityY(0))}}showChordName(t,e){this.children.list.forEach((t=>{"chordName"===t.name&&t.destroy()}));const i=this.chordDetector.getCurrentChord(),s=i?i.accumulatedPoints:0,a=this.add.text(this.cameras.main.width/2,100,`${t} ${s}/${(null==i?void 0:i.basePoints)||0}`,{fontSize:"32px",color:"#f39c12",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2});a.setOrigin(.5),a.setScrollFactor(0),a.name="chordName",this.tweens.add({targets:a,alpha:0,y:a.y-50,duration:2e3,ease:"Power2",onComplete:()=>a.destroy()})}gameOver(){this.isGameRunning=!1;const{width:t,height:e}=this.cameras.main;this.cameras.main.stopFollow(),this.add.rectangle(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2,t,e,0,.8).setScrollFactor(0),this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2-80,"Game Over!",{fontSize:"48px",color:"#e74c3c",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0),this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2-20,`Final Score: ${Math.floor(this.score)}`,{fontSize:"24px",color:"#ffffff",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0);const i=this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2+30,"Press T to restart or ESC for menu",{fontSize:"18px",color:"#bdc3c7",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0);this.tweens.add({targets:i,alpha:.5,duration:1e3,yoyo:!0,repeat:-1}),window.parent&&window.parent.postMessage({type:"GAME_OVER",data:{finalScore:Math.floor(this.score)}},"*")}}class C extends s.Scene{constructor(){super("MainMenu"),e(this,"title",null),e(this,"subtitle",null),e(this,"instructions",null),e(this,"startText",null),e(this,"credits",null)}init(){this.title=null,this.subtitle=null,this.instructions=null,this.startText=null,this.credits=null}create(){this.refreshLayout(),this.scale.on("resize",(()=>this.refreshLayout())),this.input.once("pointerdown",(()=>{this.scene.start("MuseRunnerGame")})),this.input.keyboard.on("keydown-SPACE",(()=>{this.scene.start("MuseRunnerGame")}))}refreshLayout(){const{width:t,height:e}=this.scale;this.cameras.resize(t,e),this.add.rectangle(t/2,e/2,t,e,2899536);const i=Math.min(t/1024,e/768);this.title||(this.title=this.add.text(0,0,"🎵 Muse Runner 🏃‍♂️",{fontSize:"48px",color:"#ffffff",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.title.setPosition(t/2,e/3),this.title.setScale(i),this.subtitle||(this.subtitle=this.add.text(0,0,"Rhythm Platformer",{fontSize:"24px",color:"#3498db",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.subtitle.setPosition(t/2,e/3+60*i),this.subtitle.setScale(i),this.instructions||(this.instructions=this.add.text(0,0,"Control your character by playing musical notes!\n\nPress S-D-F-G-H-J-K keys to create platforms\nKeep your character from falling off the screen",{fontSize:"18px",color:"#ecf0f1",fontFamily:"Nabla, system-ui",align:"center"}).setOrigin(.5)),this.instructions.setPosition(t/2,e/2),this.instructions.setScale(i),this.startText||(this.startText=this.add.text(0,0,"Click to Start or Press SPACE",{fontSize:"24px",color:"#2ecc71",fontFamily:"Nabla, system-ui"}).setOrigin(.5),this.tweens.add({targets:this.startText,alpha:.5,duration:1e3,yoyo:!0,repeat:-1})),this.startText.setPosition(t/2,.75*e),this.startText.setScale(i),this.credits||(this.credits=this.add.text(0,0,"v0.0.4 - Built with Phaser.js for Reddit's Community Games Challenge",{fontSize:"14px",color:"#95a5a6",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.credits.setPosition(t/2,e-40),this.credits.setScale(.8*i)}}class E extends s.Scene{constructor(){super("Preloader")}init(){}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png"),this.load.image("player","player.png"),this.load.setPath("assets/fonts"),this.load.font("nabla","nabla.ttf")}create(){this.scene.start("MainMenu")}}const f={type:s.AUTO,parent:"game-container",backgroundColor:"#2c3e50",physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},scale:{mode:s.Scale.RESIZE,autoCenter:s.Scale.CENTER_BOTH,width:1024,height:768},scene:[a,E,C,A,n]};document.addEventListener("DOMContentLoaded",(()=>{new s.Game({...f,parent:"game-container"})}));
//# sourceMappingURL=index-B1hR7DkT.js.map
