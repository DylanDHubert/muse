var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{r as i}from"./phaser-CRaLQf_f.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();var s=i();class a extends s.Scene{constructor(){super("Boot")}preload(){}create(){this.scene.start("Preloader")}}class o extends s.Scene{constructor(){super("GameOver"),e(this,"camera"),e(this,"background"),e(this,"gameOverText")}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor(16711680),this.background=this.add.image(0,0,"background").setOrigin(0).setAlpha(.5),this.gameOverText=this.add.text(0,0,"Game Over",{fontFamily:"Arial Black",fontSize:"64px",color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.updateLayout(this.scale.width,this.scale.height),this.scale.on("resize",(t=>{const{width:e,height:i}=t;this.updateLayout(e,i)})),this.input.once("pointerdown",(()=>{this.scene.start("MainMenu")}))}updateLayout(t,e){this.cameras.resize(t,e),this.background&&this.background.setDisplaySize(t,e);const i=Math.min(Math.min(t/1024,e/768),1);this.gameOverText&&(this.gameOverText.setPosition(t/2,e/2),this.gameOverText.setScale(i))}}const n={CHARACTER:{SPEED:100,WIDTH:30,HEIGHT:40,COLOR:3447003,VISUAL_FEEDBACK_COLOR:15965202,VISUAL_FEEDBACK_DURATION:200},PLATFORMS:{WIDTH:120,HEIGHT:20,EXTENSION_DISTANCE:150,AHEAD_OFFSET:20,CLEANUP_DISTANCE:400,MIN_LENGTH:20,GROWTH_RATE:100},AUDIO:{NOTE_DURATION:.5,ATTACK_TIME:.01,VOLUME:.3},GAME:{OVER_FALL_DISTANCE:300,SCORE_PER_PLATFORM:10,GROUND_OFFSET:60,CHARACTER_HEIGHT_LERP_SPEED:.08,FALL_VELOCITY:300,CAMERA_DEADZONE_X:200,CAMERA_DEADZONE_Y:100,CAMERA_FOLLOW_LERP_X:.1,CAMERA_FOLLOW_LERP_Y:.1,GROUND_GRACE_PERIOD:1e3,SCORE_DECAY_RATE:1,SCREEN_SHAKE_INTENSITY:2,C2_FREQUENCY:65.41,DISSONANCE_START_TIME:2e3},CHORD_DETECTION:{ACCUMULATION_TIME:1e3,TRIAD_POINTS:50,SEVENTH_POINTS:100,POWER_CHORD_POINTS:25},LEVEL_HEIGHTS:{S:-80,R:-100,D:-120,F:-160,G:-200,H:-240,J:-280,K:-320,U:-260,I:-300,A:-40,L:-360,";":-400,"'":-440},LEVEL_COLORS:{S:15158332,D:15965202,F:15844367,G:3066993,H:3447003,J:10181046,K:15277667,R:16739179,U:5164484,I:4569041,A:9323693,L:15105570,";":1482885,"'":2600544},VALID_KEYS:["S","D","F","G","H","J","K","R","U","I","A","L",";","'","0","1","2","3","4","5","6","7","8"],ERROR_HANDLING:{MANAGER_INIT_FAILED:"Failed to initialize managers",INPUT_HANDLING_ERROR:"Input handling error",PLATFORM_EXTENSION_ERROR:"Platform extension error",CHARACTER_HEIGHT_ERROR:"Character height update error",PLATFORM_CLEANUP_ERROR:"Platform cleanup error",KEY_CHANGE_ERROR:"Key change handling error",PLATFORM_START_ERROR:"Failed to start platform",PLATFORM_END_ERROR:"Failed to end platform"}},r={S:261.63,D:293.66,F:329.63,G:349.23,H:392,J:440,K:493.88,R:311.13,U:415.3,I:466.16,A:246.94,L:523.25,";":587.33,"'":659.25};class c{constructor(){e(this,"audioContext",null),e(this,"isInitialized",!1),e(this,"audioAvailable",!1),e(this,"lfoRate",2),e(this,"chorusDepth",.1),e(this,"delayTime",.25),e(this,"delayVolume",.3),e(this,"reverbAmount",.3),e(this,"distortionAmount",.2),e(this,"currentWaveform","sawtooth"),e(this,"activeNotes",new Map),e(this,"groundC2Oscillators",[]),e(this,"groundC2Gain",null),e(this,"dissonanceOscillator",null),e(this,"dissonanceGain",null)}initialize(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.audioAvailable=!0,this.isInitialized=!0}catch(t){console.warn("Web Audio API not available:",t),this.audioAvailable=!1,this.isInitialized=!0}}playNote(t){if(!this.isInitialized)return void console.warn("AudioManager not initialized");if(!this.audioAvailable||!this.audioContext)return;const e=r[t];if(e){if(!this.activeNotes.has(t))try{this.startSustainedNote(t,e)}catch(i){console.warn("Failed to play note:",i)}}else console.warn(`Unknown key: ${t}`)}stopNote(t){const e=this.activeNotes.get(t);if(e){const i=this.audioContext.currentTime;e.gainNode.gain.exponentialRampToValueAtTime(.001,i+.1),setTimeout((()=>{e.oscillators.forEach((t=>{try{t.stop(),t.disconnect()}catch(e){}})),e.gainNode.disconnect(),this.activeNotes.delete(t)}),100)}}isAudioAvailable(){return this.audioAvailable}updateLFORate(t){this.lfoRate=Math.max(.1,Math.min(10,this.lfoRate+t)),console.log(`LFO Rate: ${this.lfoRate.toFixed(1)} Hz`)}updateChorusDepth(t){this.chorusDepth=Math.max(0,Math.min(1,this.chorusDepth+t)),console.log(`Chorus Depth: ${(100*this.chorusDepth).toFixed(0)}%`)}updateDelayVolume(t){this.delayVolume=Math.max(0,Math.min(1,this.delayVolume+t)),console.log(`Delay Volume: ${(100*this.delayVolume).toFixed(0)}%`)}updateReverbAmount(t){this.reverbAmount=Math.max(0,Math.min(1,this.reverbAmount+t)),console.log(`Reverb Amount: ${(100*this.reverbAmount).toFixed(0)}%`)}switchWaveform(){const t=["sawtooth","square","triangle","sine"],e=(t.indexOf(this.currentWaveform)+1)%t.length;this.currentWaveform=t[e],console.log(`🎵 Waveform switched to: ${this.currentWaveform}`)}getLFORate(){return this.lfoRate}getChorusDepth(){return this.chorusDepth}getDelayVolume(){return this.delayVolume}getReverbAmount(){return this.reverbAmount}getDistortionAmount(){return this.distortionAmount}getCurrentWaveform(){return this.currentWaveform}startSustainedNote(t,e){if(!this.audioContext)return;const i=this.audioContext.createOscillator(),s=this.audioContext.createOscillator(),a=this.audioContext.createGain();s.frequency.setValueAtTime(this.lfoRate,this.audioContext.currentTime),s.type="sine",a.gain.setValueAtTime(2,this.audioContext.currentTime),s.connect(a),a.connect(i.frequency),i.frequency.setValueAtTime(e,this.audioContext.currentTime),i.type=this.currentWaveform;const o=this.audioContext.createOscillator(),r=this.audioContext.createOscillator(),c=this.audioContext.createGain(),h=this.audioContext.createGain(),l=10*this.chorusDepth;o.frequency.setValueAtTime(e+l,this.audioContext.currentTime),r.frequency.setValueAtTime(e-l,this.audioContext.currentTime),o.type=this.currentWaveform,r.type=this.currentWaveform,c.gain.setValueAtTime(.2,this.audioContext.currentTime),h.gain.setValueAtTime(.2,this.audioContext.currentTime);const d=this.audioContext.createDelay(),u=this.audioContext.createGain(),m=this.audioContext.createGain();d.delayTime.setValueAtTime(this.delayTime,this.audioContext.currentTime),u.gain.setValueAtTime(this.delayVolume,this.audioContext.currentTime),m.gain.setValueAtTime(.2,this.audioContext.currentTime);const p=this.audioContext.createWaveShaper(),y=this.createDistortionCurve(.5*this.distortionAmount);p.curve=y,p.oversample="2x";const g=this.audioContext.createGain();i.connect(g),o.connect(c).connect(g),r.connect(h).connect(g);const C=this.audioContext.createGain(),f=this.audioContext.createGain();C.gain.setValueAtTime(1-this.delayVolume,this.audioContext.currentTime),f.gain.setValueAtTime(this.delayVolume,this.audioContext.currentTime),g.connect(C),g.connect(f),f.connect(d),d.connect(u),d.connect(m),m.connect(d),u.connect(p);const A=this.audioContext.createGain();C.connect(A),p.connect(A),A.connect(this.audioContext.destination);const E=this.audioContext.currentTime;g.gain.setValueAtTime(0,E),g.gain.linearRampToValueAtTime(.5*n.AUDIO.VOLUME,E+.01),i.start(E),s.start(E),o.start(E),r.start(E),this.activeNotes.set(t,{oscillators:[i,s,o,r],gainNode:g,isSustaining:!0})}playMusicalTone(t){if(!this.audioContext)return;const e=this.audioContext.createOscillator(),i=this.audioContext.createOscillator(),s=this.audioContext.createGain();i.frequency.setValueAtTime(this.lfoRate,this.audioContext.currentTime),i.type="sine",s.gain.setValueAtTime(5,this.audioContext.currentTime),i.connect(s),s.connect(e.frequency),e.frequency.setValueAtTime(t,this.audioContext.currentTime),e.type="sawtooth";const a=this.audioContext.createOscillator(),o=this.audioContext.createOscillator(),r=this.audioContext.createGain(),c=this.audioContext.createGain(),h=20*this.chorusDepth;a.frequency.setValueAtTime(t+h,this.audioContext.currentTime),o.frequency.setValueAtTime(t-h,this.audioContext.currentTime),a.type="sawtooth",o.type="sawtooth",r.gain.setValueAtTime(.3,this.audioContext.currentTime),c.gain.setValueAtTime(.3,this.audioContext.currentTime);const l=this.audioContext.createBiquadFilter();l.type="lowpass",l.frequency.setValueAtTime(this.filterFrequency,this.audioContext.currentTime),l.Q.setValueAtTime(1,this.audioContext.currentTime);const d=this.audioContext.createWaveShaper(),u=this.createDistortionCurve(this.distortionAmount);d.curve=u,d.oversample="4x";const m=this.audioContext.createDelay(),p=this.audioContext.createGain(),y=this.audioContext.createGain();m.delayTime.setValueAtTime(.1,this.audioContext.currentTime),p.gain.setValueAtTime(.3*this.reverbAmount,this.audioContext.currentTime),y.gain.setValueAtTime(.1,this.audioContext.currentTime);const g=this.audioContext.createGain();e.connect(g),a.connect(r).connect(g),o.connect(c).connect(g),g.connect(l),l.connect(d);const C=this.audioContext.createGain(),f=this.audioContext.createGain();C.gain.setValueAtTime(1-this.reverbAmount,this.audioContext.currentTime),f.gain.setValueAtTime(this.reverbAmount,this.audioContext.currentTime),d.connect(C),d.connect(f),f.connect(m),m.connect(y),y.connect(m),m.connect(A);const A=this.audioContext.createGain();C.connect(A),f.connect(A),A.connect(this.audioContext.destination);const E=this.audioContext.currentTime,T=n.AUDIO.NOTE_DURATION;A.gain.setValueAtTime(0,E),A.gain.linearRampToValueAtTime(n.AUDIO.VOLUME,E+.01),A.gain.linearRampToValueAtTime(.7*n.AUDIO.VOLUME,E+.01+.1),A.gain.exponentialRampToValueAtTime(.001,E+T),e.start(E),i.start(E),a.start(E),o.start(E);const O=E+T;e.stop(O),i.stop(O),a.stop(O),o.stop(O)}createDistortionCurve(t){const e=44100,i=new Float32Array(e),s=Math.PI/180;for(let a=0;a<e;a++){const o=2*a/e-1;i[a]=(3+t)*o*20*s/(Math.PI+t*Math.abs(o))}return i}playGroundC2(){if(!this.audioContext||this.groundC2Oscillators.length>0)return;this.groundC2Gain=this.audioContext.createGain();const t=this.audioContext.currentTime,e=this.audioContext.createOscillator();e.frequency.setValueAtTime(n.GAME.C2_FREQUENCY,t),e.type="sine";const i=this.audioContext.createOscillator();i.frequency.setValueAtTime(2*n.GAME.C2_FREQUENCY,t),i.type="sawtooth";const s=this.audioContext.createOscillator();s.frequency.setValueAtTime(1.5*n.GAME.C2_FREQUENCY,t),s.type="triangle";const a=this.audioContext.createOscillator();a.frequency.setValueAtTime(.5*n.GAME.C2_FREQUENCY,t),a.type="sine";const o=this.audioContext.createGain(),r=this.audioContext.createGain(),c=this.audioContext.createGain(),h=this.audioContext.createGain();o.gain.setValueAtTime(.4,t),r.gain.setValueAtTime(.2,t),c.gain.setValueAtTime(.3,t),h.gain.setValueAtTime(.3,t),e.connect(o),i.connect(r),s.connect(c),a.connect(h),o.connect(this.groundC2Gain),r.connect(this.groundC2Gain),c.connect(this.groundC2Gain),h.connect(this.groundC2Gain),this.groundC2Gain.connect(this.audioContext.destination),this.groundC2Gain.gain.setValueAtTime(0,t),this.groundC2Gain.gain.linearRampToValueAtTime(.4*n.AUDIO.VOLUME,t+.8),e.start(t),i.start(t),s.start(t),a.start(t),this.groundC2Oscillators=[e,i,s,a]}stopGroundC2(){if(this.groundC2Oscillators.length>0&&this.groundC2Gain){const t=this.audioContext.currentTime;this.groundC2Gain.gain.exponentialRampToValueAtTime(.001,t+.3),setTimeout((()=>{try{this.groundC2Oscillators.forEach((t=>{t.stop(),t.disconnect()})),this.groundC2Gain.disconnect()}catch(t){}this.groundC2Oscillators=[],this.groundC2Gain=null}),300)}}playDissonance(t){if(!this.audioContext||this.dissonanceOscillator)return;this.dissonanceOscillator=this.audioContext.createOscillator(),this.dissonanceGain=this.audioContext.createGain();const e=n.GAME.C2_FREQUENCY*Math.pow(2,.5);this.dissonanceOscillator.frequency.setValueAtTime(e,this.audioContext.currentTime),this.dissonanceOscillator.type="sawtooth",this.dissonanceOscillator.connect(this.dissonanceGain),this.dissonanceGain.connect(this.audioContext.destination);const i=this.audioContext.currentTime;this.dissonanceGain.gain.setValueAtTime(0,i),this.dissonanceGain.gain.linearRampToValueAtTime(t*n.AUDIO.VOLUME*.2,i+.3),this.dissonanceOscillator.start(i)}stopDissonance(){if(this.dissonanceOscillator&&this.dissonanceGain){const t=this.audioContext.currentTime;this.dissonanceGain.gain.exponentialRampToValueAtTime(.001,t+.3),setTimeout((()=>{try{this.dissonanceOscillator.stop(),this.dissonanceOscillator.disconnect(),this.dissonanceGain.disconnect()}catch(t){}this.dissonanceOscillator=null,this.dissonanceGain=null}),300)}}}class h{constructor(t){e(this,"scene"),e(this,"currentlyPressedKeys",new Set),e(this,"previouslyPressedKeys",new Set),e(this,"isInitialized",!1),e(this,"keyObjects",new Map),e(this,"arrowKeys",{up:null,down:null,left:null,right:null}),this.scene=t}initialize(){this.scene.input.keyboard?(n.VALID_KEYS.forEach((t=>{";"===t?this.keyObjects.set(t,this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.SEMICOLON)):"'"===t?this.keyObjects.set(t,this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.QUOTES)):this.keyObjects.set(t,this.scene.input.keyboard.addKey(t))})),this.arrowKeys.up=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.UP),this.arrowKeys.down=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.DOWN),this.arrowKeys.left=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.LEFT),this.arrowKeys.right=this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.RIGHT),this.keyObjects.set("1",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.ONE)),this.keyObjects.set("2",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.TWO)),this.keyObjects.set("3",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.THREE)),this.keyObjects.set("4",this.scene.input.keyboard.addKey(s.Input.Keyboard.KeyCodes.FOUR)),this.isInitialized=!0):console.warn("Keyboard input not available")}update(t){return this.isInitialized&&this.scene.input.keyboard?(this.previouslyPressedKeys=new Set(this.currentlyPressedKeys),this.currentlyPressedKeys.clear(),n.VALID_KEYS.forEach((t=>{const e=this.keyObjects.get(t);e&&e.isDown&&this.currentlyPressedKeys.add(t)})),["1","2","3","4"].forEach((t=>{const e=this.keyObjects.get(t);e&&e.isDown&&this.currentlyPressedKeys.add(t)})),{keyStateChanged:this.hasKeyStateChanged()}):{keyStateChanged:!1}}getInputState(){return{pressedKeys:new Set(this.currentlyPressedKeys)}}getArrowKeyState(){var t,e,i,s;return{up:(null==(t=this.arrowKeys.up)?void 0:t.isDown)||!1,down:(null==(e=this.arrowKeys.down)?void 0:e.isDown)||!1,left:(null==(i=this.arrowKeys.left)?void 0:i.isDown)||!1,right:(null==(s=this.arrowKeys.right)?void 0:s.isDown)||!1}}hasKeyStateChanged(){if(this.currentlyPressedKeys.size!==this.previouslyPressedKeys.size)return!0;for(const t of this.currentlyPressedKeys)if(!this.previouslyPressedKeys.has(t))return!0;for(const t of this.previouslyPressedKeys)if(!this.currentlyPressedKeys.has(t))return!0;return!1}isValidGameKey(t){return n.VALID_KEYS.includes(t)}}class l{constructor(t){e(this,"scene"),e(this,"activePlatforms",new Map),e(this,"platformsGroup"),e(this,"isInitialized",!1),this.scene=t,this.platformsGroup=this.scene.add.group()}initialize(){this.isInitialized=!0}startNewPlatform(t,e){if(!this.isInitialized)return void console.warn("PlatformManager not initialized");if(this.activePlatforms.has(t))return;const{height:i}=this.scene.cameras.main,s=i+n.LEVEL_HEIGHTS[t],a=n.LEVEL_COLORS[t],o=this.scene.add.rectangle(e+n.PLATFORMS.AHEAD_OFFSET,s,n.PLATFORMS.MIN_LENGTH+20,n.PLATFORMS.HEIGHT+10,a,.3);o.setStrokeStyle(3,a,.6);const r=this.scene.add.rectangle(e+n.PLATFORMS.AHEAD_OFFSET,s,n.PLATFORMS.MIN_LENGTH,n.PLATFORMS.HEIGHT,a),c=this.scene.add.rectangle(e+n.PLATFORMS.AHEAD_OFFSET,s-2,n.PLATFORMS.MIN_LENGTH,n.PLATFORMS.HEIGHT/2,16777215,.2),h=this.scene.add.text(e+n.PLATFORMS.AHEAD_OFFSET,s,this.getNoteSymbol(t),{fontSize:"16px",color:"#FFFFFF",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2});h.setOrigin(.5),this.scene.physics.add.existing(r,!0);const l=this.scene.tweens.add({targets:[r,o,c],scaleX:1.05,scaleY:1.05,duration:1e3,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"}),d={rectangle:r,startX:e,key:t,startTime:this.scene.time.now,isGrowing:!0,glowEffect:o,noteSymbol:h,pulseTween:l};this.activePlatforms.set(t,d),this.platformsGroup.add(r),this.platformsGroup.add(o),this.platformsGroup.add(c),this.platformsGroup.add(h)}getNoteSymbol(t){return{S:"♪",D:"♫",F:"♪",G:"♫",H:"♪",J:"♫",K:"♪",R:"♯",U:"♯",I:"♭",A:"♪",L:"♫",";":"♪","'":"♫"}[t]||"♪"}endPlatform(t){const e=this.activePlatforms.get(t);e&&(e.pulseTween&&e.pulseTween.stop(),this.scene.tweens.add({targets:[e.rectangle,e.glowEffect,e.noteSymbol],alpha:.3,duration:500,ease:"Power2"}),e.isGrowing=!1,this.activePlatforms.delete(t))}extendActivePlatforms(t){this.activePlatforms.forEach(((e,i)=>{if(!e.isGrowing)return;const s=e.rectangle,a=t-e.startX,o=Math.max(n.PLATFORMS.MIN_LENGTH,n.PLATFORMS.MIN_LENGTH+a),r=s.x-s.width/2+o/2;s.setSize(o,s.height),s.setPosition(r,s.y)}))}getHighestActiveKey(){if(0===this.activePlatforms.size)return null;let t=null,e=Number.POSITIVE_INFINITY;return this.activePlatforms.forEach(((i,s)=>{const a=n.LEVEL_HEIGHTS[s];a<e&&(e=a,t=s)})),t}hasActivePlatforms(){return this.activePlatforms.size>0}cleanupOldPlatforms(t){const e=[];this.platformsGroup.children.entries.forEach((i=>{const s=i;s.x+s.width/2<t-n.PLATFORMS.CLEANUP_DISTANCE&&e.push(s)})),e.forEach((t=>{this.platformsGroup.remove(t),t.destroy()}))}getActivePlatforms(){return new Map(this.activePlatforms)}getPlatformsGroup(){return this.platformsGroup}getLevelHeight(t){return n.LEVEL_HEIGHTS[t]}getLevelColor(t){return n.LEVEL_COLORS[t]}}const d={S:"C",D:"D",F:"E",G:"F",H:"G",J:"A",K:"B",R:"D#",U:"G#",I:"Bb",A:"B",L:"C",";":"D","'":"E"},u={"C,E,G":{name:"C Major (I)",points:50},"A,D,F":{name:"D Minor (ii)",points:50},"B,E,G":{name:"E Minor (iii)",points:50},"A,C,F":{name:"F Major (IV)",points:50},"B,D,G":{name:"G Major (V)",points:50},"A,C,E":{name:"A Minor (vi)",points:50},"B,D,F":{name:"B Diminished (vii°)",points:50},"B,C,E,G":{name:"C Major 7 (IΔ7)",points:100},"A,C,D,F":{name:"D Minor 7 (ii7)",points:100},"B,D,E,G":{name:"E Minor 7 (iii7)",points:100},"A,C,E,F":{name:"F Major 7 (IVΔ7)",points:100},"B,D,F,G":{name:"G Dominant 7 (V7)",points:100},"A,C,E,G":{name:"A Minor 7 (vi7)",points:100},"A,B,D,F":{name:"B Half-Diminished 7 (viiø7)",points:100},"B,C,D,E,G":{name:"C Major 9",points:150},"A,C,D,E,F":{name:"D Minor 9",points:150},"A,B,D,F,G":{name:"G9 (Dominant 9)",points:150},"A,B,C,E,G":{name:"A Minor 9",points:150},"C,F,G":{name:"Csus4",points:50},"C,D,G":{name:"Csus2",points:50},"A,D,G":{name:"Dsus4",points:50},"C,D,E,G":{name:"Cadd9",points:75},"C,G":{name:"C5",points:25},"A,D":{name:"D5",points:25},"B,E":{name:"E5",points:25},"C,F":{name:"F5",points:25},"D,G":{name:"G5",points:25},"A,E":{name:"A5",points:25},"B,F":{name:"B5",points:25}},m={"A,C,D#":{name:"A Diminished (viio/iii)",points:50},"A,C#,E":{name:"A Major (V/ii)",points:50},"A,D,F#":{name:"D Major (V/V)",points:50},"A#,C#,E":{name:"A# Diminished (viio/bII)",points:50},"A#,C,D,F":{name:"F Minor (iv)",points:50},"A#,F,G#":{name:"F Augmented (IV+)",points:50},"A#,D,F":{name:"Bb Major (bVII)",points:50},"A#,D,G":{name:"G Minor (v)",points:50},"A#,D,G#":{name:"Ab Major (bVI)",points:50},"B,D#,G#":{name:"G# Minor (iii/vi)",points:50},"C,D#,G":{name:"C Minor (i)",points:50},"A#,C,D#,G":{name:"C Minor 7 (i7)",points:100},"C,E,G#":{name:"C Augmented (I+)",points:50},"B,C,E,G#":{name:"C Augmented Major 7 (I+Δ7)",points:100},"C#,E,G#":{name:"C# Diminished (viio/ii)",points:50},"C#,F,G#":{name:"C# Minor (ii/ii)",points:50},"B,C#,F,G#":{name:"C# Minor 7 (ii7/ii)",points:100},"D,F,G#":{name:"D Augmented (II+)",points:50},"A#,D#,G":{name:"Eb Minor (biii)",points:50},"B,D#,G":{name:"D# Diminished",points:50},"B,E,G#":{name:"E Major (III)",points:50},"B,D,E,G#":{name:"E Dominant 7 (V7/vi)",points:100},"C,F,G#":{name:"F Augmented (IV+)",points:50},"A#,C,F":{name:"F Minor (iv)",points:50},"A#,C,F,G#":{name:"F Augmented (IV+)",points:50},"A#,F":{name:"Bb5 (bVII5)",points:25},"A#,D#":{name:"Eb5 (bIII5)",points:25},"D#,G#":{name:"Ab5 (bVI5)",points:25}};function p(t){return t.map((t=>d[t]||t))}class y{constructor(t){e(this,"scene"),e(this,"currentChord",null),this.scene=t}update(t){const e=Array.from(t).sort(),i=p(e),s=i.join(",");t.size>1&&(console.log("Keys pressed:",e.join(",")),console.log("Notes:",i.join(",")),console.log("Looking for chord:",s));const a=(o=e,function(t){const e=[...t].sort().join(",");console.log("Looking for chord:",e),console.log("Available main chords:",Object.keys(u).length),console.log("Available extended chords:",Object.keys(m).length);const i=u[e];if(i)return console.log("✅ Found in main chords:",i.name),i;const s=m[e];return s?(console.log("✅ Found in extended chords:",s.name),s):(console.log("❌ No chord found for:",e),null)}(p([...o].sort())));var o;if(a){console.log("✅ Chord detected:",a.name),this.currentChord&&this.currentChord.chordType===a.name||(this.currentChord={chordType:a.name,basePoints:a.points,accumulatedPoints:0,startTime:this.scene.time.now,isComplete:!1});const t=this.scene.time.now-this.currentChord.startTime,e=Math.min(t/n.CHORD_DETECTION.ACCUMULATION_TIME,1),i=Math.floor(this.currentChord.basePoints*e),s=i-this.currentChord.accumulatedPoints;return this.currentChord.accumulatedPoints=i,e>=1&&!this.currentChord.isComplete&&(this.currentChord.isComplete=!0),{points:s,chordName:this.currentChord.chordType}}return t.size>1&&console.log("❌ No chord found for:",s),this.currentChord=null,{points:0,chordName:null}}getCurrentChord(){return this.currentChord}}class g extends s.Scene{constructor(){super("MuseRunnerGame"),e(this,"character"),e(this,"scoreText"),e(this,"isGameRunning",!1),e(this,"score",0),e(this,"isGrounded",!1),e(this,"groundStartTime",0),e(this,"lastScoreDecayTime",0),e(this,"synthDisplay"),e(this,"floatingPoints",[]),e(this,"floatingPointsFrameCount",0),e(this,"chordDisplayBox"),e(this,"chordDisplayText"),e(this,"chordProgressBar"),e(this,"groundVisual"),e(this,"backgroundShader"),e(this,"backgroundTime",0),e(this,"audioManager"),e(this,"inputManager"),e(this,"platformManager"),e(this,"chordDetector")}async create(){const{width:t,height:e}=this.cameras.main;try{this.audioManager=new c,this.inputManager=new h(this),this.platformManager=new l(this),this.chordDetector=new y(this),this.audioManager.initialize(),this.inputManager.initialize(),this.platformManager.initialize()}catch(s){console.error(n.ERROR_HANDLING.MANAGER_INIT_FAILED,s)}this.character=this.add.image(100,e-80,"player"),this.character.setOrigin(.5,1),this.character.setDepth(1e3),this.physics.add.existing(this.character);const i=this.character.body;i.setCollideWorldBounds(!1),i.setDragX(0),i.setFrictionX(0),i.setGravityY(0),this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"24px",color:"#ffffff",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2}),this.scoreText.setScrollFactor(0),this.synthDisplay=this.add.text(16,50,"SYNTH CONTROLS:\n5/6 LFO Rate | 7/8 Chorus\n1/2 Delay Vol | 3/4 Reverb\n0: Waveform",{fontSize:"16px",color:"#ffff00",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:1}),this.synthDisplay.setScrollFactor(0),this.createChordDisplayBox(),this.createGroundVisual(),this.createMathematicalBackground(),this.add.text(t-16,16,"v0.0.4 | ESC: Menu | T: Restart",{fontSize:"14px",color:"#95a5a6",fontFamily:"Nabla, system-ui"}).setOrigin(1,0).setScrollFactor(0),this.input.keyboard.on("keydown-ESC",(()=>{this.scene.start("MainMenu")})),this.input.keyboard.on("keydown-T",(()=>{this.scene.restart()})),this.isGameRunning=!0,this.cameras.main.startFollow(this.character,!0,n.GAME.CAMERA_FOLLOW_LERP_X,n.GAME.CAMERA_FOLLOW_LERP_Y),this.cameras.main.setDeadzone(n.GAME.CAMERA_DEADZONE_X,n.GAME.CAMERA_DEADZONE_Y),this.score=0}update(){if(!this.isGameRunning)return;const t=this.character.body;t.setVelocityX(n.CHARACTER.SPEED),t.setDragX(0),t.setFrictionX(0);try{const{keyStateChanged:t}=this.inputManager.update(this.time.now),e=this.inputManager.getInputState();this.inputManager.getArrowKeyState(),e.pressedKeys.has("5")&&this.audioManager.updateLFORate(-.1),e.pressedKeys.has("6")&&this.audioManager.updateLFORate(.1),e.pressedKeys.has("7")&&this.audioManager.updateChorusDepth(-.05),e.pressedKeys.has("8")&&this.audioManager.updateChorusDepth(.05),e.pressedKeys.has("1")&&this.audioManager.updateDelayVolume(-.05),e.pressedKeys.has("2")&&this.audioManager.updateDelayVolume(.05),e.pressedKeys.has("3")&&this.audioManager.updateReverbAmount(-.05),e.pressedKeys.has("4")&&this.audioManager.updateReverbAmount(.05),t&&e.pressedKeys.has("0")&&this.audioManager.switchWaveform(),this.updateSynthesisDisplay(),this.updateMathematicalBackground(),t&&this.handleKeyChanges(e.pressedKeys);const i=this.chordDetector.update(e.pressedKeys);if(i.points>0){this.score+=i.points,this.scoreText.setText(`Score: ${Math.floor(this.score)}`);const t=this.chordDetector.getCurrentChord();t&&this.showFloatingPoints(t.accumulatedPoints,this.cameras.main.width/2,this.cameras.main.height/2),this.updateChordDisplayBox(i.chordName,i.points),i.chordName&&i.points>0&&this.showChordName(i.chordName,i.points)}}catch(e){console.warn(n.ERROR_HANDLING.INPUT_HANDLING_ERROR,e)}try{this.platformManager.hasActivePlatforms()&&this.platformManager.extendActivePlatforms(this.character.x)}catch(e){console.warn(n.ERROR_HANDLING.PLATFORM_EXTENSION_ERROR,e)}try{this.updateCharacterHeight()}catch(e){console.warn(n.ERROR_HANDLING.CHARACTER_HEIGHT_ERROR,e)}}updateSynthesisDisplay(){const t=this.audioManager.getLFORate(),e=this.audioManager.getChorusDepth(),i=this.audioManager.getDelayVolume(),s=this.audioManager.getReverbAmount(),a=this.audioManager.getCurrentWaveform();this.synthDisplay.setText(`SYNTH CONTROLS:\n5/6 LFO: ${t.toFixed(1)}Hz | 7/8 Chorus: ${(100*e).toFixed(0)}%\n1/2 Delay: ${(100*i).toFixed(0)}% | 3/4 Reverb: ${(100*s).toFixed(0)}%\n0: Waveform: ${a.toUpperCase()}`),this.character.y>this.cameras.main.height+n.GAME.OVER_FALL_DISTANCE&&this.gameOver();try{this.platformManager.cleanupOldPlatforms(this.character.x)}catch(o){console.warn(n.ERROR_HANDLING.PLATFORM_CLEANUP_ERROR,o)}}handleKeyChanges(t){try{const e=this.platformManager.getActivePlatforms();t.forEach((t=>{if(this.isValidGameKey(t)&&!e.has(t))try{this.platformManager.startNewPlatform(t,this.character.x),this.audioManager.playNote(t),this.character.setScale(1.2),this.time.delayedCall(n.CHARACTER.VISUAL_FEEDBACK_DURATION,(()=>{this.character.setScale(1)})),this.score+=n.GAME.SCORE_PER_PLATFORM,this.scoreText.setText(`Score: ${Math.floor(this.score)}`),this.showFloatingPoints(n.GAME.SCORE_PER_PLATFORM,this.cameras.main.width/2,this.cameras.main.height/2),this.createPlatformParticles(t,this.character.x)}catch(i){console.warn(`${n.ERROR_HANDLING.PLATFORM_START_ERROR} for key ${t}:`,i)}})),e.forEach(((e,i)=>{if(!t.has(i))try{this.platformManager.endPlatform(i),this.audioManager.stopNote(i)}catch(s){console.warn(`${n.ERROR_HANDLING.PLATFORM_END_ERROR} for key ${i}:`,s)}}))}catch(e){console.error(n.ERROR_HANDLING.KEY_CHANGE_ERROR,e)}}isValidGameKey(t){return n.VALID_KEYS.includes(t)}updateCharacterHeight(){const t=this.character.body,e=this.platformManager.getHighestActiveKey();if(e){this.isGrounded&&this.handleLeaveGround();const{height:i}=this.cameras.main,a=i+n.LEVEL_HEIGHTS[e],o=this.character.y,r=a-o;if(Math.abs(r)>.5){const e=s.Math.Linear(o,a,n.GAME.CHARACTER_HEIGHT_LERP_SPEED);this.character.y=e,t.setVelocityY(0)}else this.character.y=a,t.setVelocityY(0)}else{const{height:e}=this.cameras.main,i=e-20;this.character.y<i?t.setVelocityY(n.GAME.FALL_VELOCITY):(this.character.y=i,t.setVelocityY(0),this.isGrounded?this.handleStayGrounded():this.handleHitGround())}}handleHitGround(){this.isGrounded=!0,this.groundStartTime=this.time.now,this.lastScoreDecayTime=this.time.now,this.audioManager.playGroundC2(),this.character.setTint(6710886),console.log("🎵 Character hit ground - C2 base note started")}handleStayGrounded(){this.time.now-this.groundStartTime>n.GAME.GROUND_GRACE_PERIOD&&this.time.now-this.lastScoreDecayTime>=1e3&&(this.score-=n.GAME.SCORE_DECAY_RATE,this.score=Math.max(0,this.score),this.scoreText.setText(`Score: ${Math.floor(this.score)}`),this.lastScoreDecayTime=this.time.now,this.showFloatingPoints(-1,this.cameras.main.width/2,this.cameras.main.height/2),console.log("📉 Score decay: -1 point"))}handleLeaveGround(){this.isGrounded=!1,this.audioManager.stopGroundC2(),this.character.clearTint(),console.log("🎵 Character left ground - audio stopped")}showFloatingPoints(t,e,i){const s=this.add.text(e,i,`${t>0?"+":""}${t}`,{fontSize:"24px",color:this.getPointsColor(t),fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2});s.setOrigin(.5),s.setScrollFactor(0),this.floatingPoints.push(s),this.createPointsParticles(e,i,t),this.animateFloatingPoints(s,t)}getPointsColor(t){return t<0?"#E74C3C":t>=100?"#FFD700":t>=50?"#9B59B6":t>=25?"#3498DB":"#2ECC71"}createPointsParticles(t,e,i){if(!(i%10==0||i>=50))return;const s=Math.min(i/10,8);for(let a=0;a<s;a++){const i=this.add.circle(t,e,2,16777215,.8);i.setScrollFactor(0);const o=2*Math.PI*a/s+.5*Math.random(),n=50+100*Math.random();this.tweens.add({targets:i,x:t+Math.cos(o)*n,y:e+Math.sin(o)*n,alpha:0,scale:0,duration:800+400*Math.random(),ease:"Power2",onComplete:()=>i.destroy()})}}animateFloatingPoints(t,e){let i=0;const s=()=>{if(i++,e%5==0&&i%5==0){const e=1.2+(i%10==0?.3:.1);this.tweens.add({targets:t,scaleX:e,scaleY:e,duration:100,yoyo:!0,ease:"Power2"})}i<60&&this.time.delayedCall(16,s)};s(),this.tweens.add({targets:t,y:t.y-100,alpha:0,rotation:.5*Math.random()-.25,duration:1500,ease:"Power2",onComplete:()=>{t.destroy();const e=this.floatingPoints.indexOf(t);e>-1&&this.floatingPoints.splice(e,1)}})}createChordDisplayBox(){const{width:t,height:e}=this.cameras.main;this.chordDisplayBox=this.add.rectangle(t/2,e-60,t-40,80,2899536,.9),this.chordDisplayBox.setScrollFactor(0),this.chordDisplayBox.setStrokeStyle(2,3447003),this.chordDisplayText=this.add.text(t/2,e-80,"No chord active",{fontSize:"20px",color:"#ecf0f1",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:1}),this.chordDisplayText.setOrigin(.5),this.chordDisplayText.setScrollFactor(0),this.add.rectangle(t/2,e-40,t-60,8,3426654).setScrollFactor(0),this.chordProgressBar=this.add.rectangle(t/2-(t-60)/2,e-40,0,8,3066993),this.chordProgressBar.setOrigin(0,.5),this.chordProgressBar.setScrollFactor(0)}createGroundVisual(){const{width:t,height:e}=this.cameras.main;this.groundVisual=this.add.rectangle(t/2,e-20,t,20,9127187,.8),this.groundVisual.setScrollFactor(0),this.groundVisual.setStrokeStyle(2,6636321),this.add.rectangle(t/2,e-20,t,20,6636321,.3).setScrollFactor(0),this.add.text(20,e-30,"GROUND",{fontSize:"14px",color:"#8B4513",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:1}).setScrollFactor(0)}createPlatformParticles(t,e){const{height:i}=this.cameras.main,s=i+n.LEVEL_HEIGHTS[t],a=n.LEVEL_COLORS[t];for(let o=0;o<8;o++){const t=this.add.text(e,s,"♪",{fontSize:"12px",color:`#${a.toString(16).padStart(6,"0")}`,fontFamily:"Nabla, system-ui",stroke:"#FFFFFF",strokeThickness:1});t.setOrigin(.5);const i=2*Math.PI*o/8+.5*Math.random(),n=80+120*Math.random(),r=e+Math.cos(i)*n,c=s+Math.sin(i)*n;this.tweens.add({targets:t,x:r,y:c,alpha:0,scale:.3,rotation:Math.random()*Math.PI*2,duration:800+400*Math.random(),ease:"Power2",onComplete:()=>t.destroy()})}for(let o=0;o<5;o++){const t=this.add.circle(e,s,2,a,.8),i=2*Math.PI*o/5,n=60+80*Math.random(),r=e+Math.cos(i)*n,c=s+Math.sin(i)*n;this.tweens.add({targets:t,x:r,y:c,alpha:0,scale:0,duration:600+300*Math.random(),ease:"Power2",onComplete:()=>t.destroy()})}}updateChordDisplayBox(t,e){if(!t)return this.chordDisplayText.setText("No chord active"),this.chordDisplayText.setColor("#95a5a6"),void this.chordProgressBar.setScaleX(0);const i=this.chordDetector.getCurrentChord();if(i){const e=i.accumulatedPoints/i.basePoints;this.chordDisplayText.setText(`${t} (${Math.floor(100*e)}%)`),e>=1?this.chordDisplayText.setColor("#f39c12"):e>=.5?this.chordDisplayText.setColor("#2ecc71"):this.chordDisplayText.setColor("#3498db");const{width:s}=this.cameras.main,a=(s-60)*e;this.chordProgressBar.setScaleX(a/(s-60)),e>=1?this.chordProgressBar.setFillStyle(15965202):e>=.5?this.chordProgressBar.setFillStyle(3066993):this.chordProgressBar.setFillStyle(3447003)}}showChordName(t,e){this.children.list.forEach((t=>{"chordName"===t.name&&t.destroy()}));const i=this.chordDetector.getCurrentChord(),s=i?i.accumulatedPoints:0,a=this.add.text(this.cameras.main.width/2,100,`${t} ${s}/${(null==i?void 0:i.basePoints)||0}`,{fontSize:"32px",color:"#f39c12",fontFamily:"Nabla, system-ui",stroke:"#000000",strokeThickness:2});a.setOrigin(.5),a.setScrollFactor(0),a.name="chordName",this.tweens.add({targets:a,alpha:0,y:a.y-50,duration:2e3,ease:"Power2",onComplete:()=>a.destroy()})}gameOver(){this.isGameRunning=!1;const{width:t,height:e}=this.cameras.main;this.cameras.main.stopFollow(),this.add.rectangle(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2,t,e,0,.8).setScrollFactor(0),this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2-80,"Game Over!",{fontSize:"48px",color:"#e74c3c",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0),this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2-20,`Final Score: ${Math.floor(this.score)}`,{fontSize:"24px",color:"#ffffff",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0);const i=this.add.text(this.cameras.main.scrollX+t/2,this.cameras.main.scrollY+e/2+30,"Press T to restart or ESC for menu",{fontSize:"18px",color:"#bdc3c7",fontFamily:"Arial, sans-serif"}).setOrigin(.5).setScrollFactor(0);this.tweens.add({targets:i,alpha:.5,duration:1e3,yoyo:!0,repeat:-1}),window.parent&&window.parent.postMessage({type:"GAME_OVER",data:{finalScore:Math.floor(this.score)}},"*")}createMathematicalBackground(){const{width:t,height:e}=this.cameras.main;this.backgroundShader=this.add.shader("\n      precision mediump float;\n      \n      uniform float time;\n      uniform float lfoRate;\n      uniform float chorusDepth;\n      uniform float delayVolume;\n      uniform float reverbAmount;\n      uniform vec2 resolution;\n      uniform float activeNotes[14]; // Array of active note frequencies\n      \n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n        vec2 center = vec2(0.5, 0.5);\n        float dist = distance(uv, center);\n        \n        // BASE MATHEMATICAL FUNCTIONS\n        float wave1 = sin(uv.x * 10.0 + time * lfoRate) * 0.3;\n        float wave2 = cos(uv.y * 8.0 + time * chorusDepth * 2.0) * 0.2;\n        float wave3 = sin((uv.x + uv.y) * 6.0 + time * delayVolume * 3.0) * 0.15;\n        \n        // NOTE-SPECIFIC WAVES\n        float noteWaves = 0.0;\n        for (int i = 0; i < 14; i++) {\n          if (activeNotes[i] > 0.0) {\n            float freq = activeNotes[i] * 0.01; // Scale frequency\n            noteWaves += sin(uv.x * freq + time) * 0.1 * activeNotes[i];\n          }\n        }\n        \n        // COMBINE ALL WAVES\n        float combined = wave1 + wave2 + wave3 + noteWaves;\n        \n        // CREATE COLOR BASED ON WAVE VALUES\n        vec3 color1 = vec3(0.2, 0.4, 0.8); // Blue base\n        vec3 color2 = vec3(0.8, 0.2, 0.4); // Red accent\n        vec3 color3 = vec3(0.4, 0.8, 0.2); // Green accent\n        \n        // MIX COLORS BASED ON WAVE VALUES\n        vec3 finalColor = mix(color1, color2, (combined + 1.0) * 0.5);\n        finalColor = mix(finalColor, color3, abs(combined) * 0.3);\n        \n        // ADD RADIAL GRADIENT\n        float radial = 1.0 - dist * 1.5;\n        finalColor *= radial;\n        \n        gl_FragColor = vec4(finalColor, 0.6); // Semi-transparent\n      }\n    ",t/2,e/2,t,e),this.backgroundShader.setUniform("time",0),this.backgroundShader.setUniform("lfoRate",2),this.backgroundShader.setUniform("chorusDepth",.1),this.backgroundShader.setUniform("delayVolume",.3),this.backgroundShader.setUniform("reverbAmount",.3),this.backgroundShader.setUniform("resolution",[t,e]);const i=new Array(14).fill(0);this.backgroundShader.setUniform("activeNotes",i),this.backgroundShader.setDepth(-1e3)}updateMathematicalBackground(){if(!this.backgroundShader)return;this.backgroundTime+=.001*this.time.delta,this.backgroundShader.setUniform("time",this.backgroundTime),this.backgroundShader.setUniform("lfoRate",this.audioManager.getLFORate()),this.backgroundShader.setUniform("chorusDepth",this.audioManager.getChorusDepth()),this.backgroundShader.setUniform("delayVolume",this.audioManager.getDelayVolume()),this.backgroundShader.setUniform("reverbAmount",this.audioManager.getReverbAmount());const t=this.platformManager.getActivePlatforms(),e=new Array(14).fill(0),i={S:261.63,D:293.66,F:329.63,G:349.23,H:392,J:440,K:493.88,R:311.13,U:415.3,I:466.16,A:246.94,L:523.25,";":587.33,"'":659.25};let s=0;for(const[a,o]of Object.entries(i))t.has(a)&&(e[s]=o),s++;this.backgroundShader.setUniform("activeNotes",e)}}class C extends s.Scene{constructor(){super("MainMenu"),e(this,"title",null),e(this,"subtitle",null),e(this,"instructions",null),e(this,"startText",null),e(this,"credits",null)}init(){this.title=null,this.subtitle=null,this.instructions=null,this.startText=null,this.credits=null}create(){this.refreshLayout(),this.scale.on("resize",(()=>this.refreshLayout())),this.input.once("pointerdown",(()=>{this.scene.start("MuseRunnerGame")})),this.input.keyboard.on("keydown-SPACE",(()=>{this.scene.start("MuseRunnerGame")}))}refreshLayout(){const{width:t,height:e}=this.scale;this.cameras.resize(t,e),this.add.rectangle(t/2,e/2,t,e,2899536);const i=Math.min(t/1024,e/768);this.title||(this.title=this.add.text(0,0,"🎵 Muse Runner 🏃‍♂️",{fontSize:"48px",color:"#ffffff",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.title.setPosition(t/2,e/3),this.title.setScale(i),this.subtitle||(this.subtitle=this.add.text(0,0,"Rhythm Platformer",{fontSize:"24px",color:"#3498db",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.subtitle.setPosition(t/2,e/3+60*i),this.subtitle.setScale(i),this.instructions||(this.instructions=this.add.text(0,0,"Control your character by playing musical notes!\n\nPress S-D-F-G-H-J-K keys to create platforms\nKeep your character from falling off the screen",{fontSize:"18px",color:"#ecf0f1",fontFamily:"Nabla, system-ui",align:"center"}).setOrigin(.5)),this.instructions.setPosition(t/2,e/2),this.instructions.setScale(i),this.startText||(this.startText=this.add.text(0,0,"Click to Start or Press SPACE",{fontSize:"24px",color:"#2ecc71",fontFamily:"Nabla, system-ui"}).setOrigin(.5),this.tweens.add({targets:this.startText,alpha:.5,duration:1e3,yoyo:!0,repeat:-1})),this.startText.setPosition(t/2,.75*e),this.startText.setScale(i),this.credits||(this.credits=this.add.text(0,0,"v0.0.4 - Built with Phaser.js for Reddit's Community Games Challenge",{fontSize:"14px",color:"#95a5a6",fontFamily:"Nabla, system-ui"}).setOrigin(.5)),this.credits.setPosition(t/2,e-40),this.credits.setScale(.8*i)}}class f extends s.Scene{constructor(){super("Preloader")}init(){}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png"),this.load.image("player","player.png"),this.load.setPath("assets/fonts"),this.load.font("nabla","nabla.ttf")}create(){this.scene.start("MainMenu")}}const A={type:s.AUTO,parent:"game-container",backgroundColor:"#2c3e50",physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},scale:{mode:s.Scale.RESIZE,autoCenter:s.Scale.CENTER_BOTH,width:1024,height:768},scene:[a,f,C,g,o]};document.addEventListener("DOMContentLoaded",(()=>{new s.Game({...A,parent:"game-container"})}));
//# sourceMappingURL=index-B2VuSfwN.js.map
